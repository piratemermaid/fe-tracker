{"version":3,"sources":["constants.js","components/RequireAuth.js","components/Loading.js","pages/auth/Login.js","pages/auth/Signup.js","pages/NewPlaythrough.js","helpers/helpers.js","helpers/uihelpers.js","components/StudentImg.js","components/RosterRow.js","components/RosterFooter.js","pages/Roster.js","pages/Student.js","components/ClassSelectorType.js","pages/ClassSelector.js","components/SkillsOverview.js","pages/AddStudent.js","pages/Gifts.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","ComposedComponent","RequireAuth","this","checkAndRedirect","axios","method","url","then","res","data","authenticated","props","history","push","catch","err","console","log","React","Component","withRouter","Loading","id","Login","state","username","password","errorMessage","e","preventDefault","params","login","authenticateUser","setState","response","onSubmit","field","target","value","className","Grid","container","justify","item","TextField","type","label","onChange","onInputChange","Button","variant","color","onClick","useDemoAccount","to","Signup","email","passwordMatch","error","validateFields","signup","length","validateEmail","test","String","toLowerCase","NewPlaythrough","startNewPlaythrough","house","byleth","getStudentOrder","getPlaythrough","imgSrc","replace","imgClass","xs","selectHouse","src","alt","title","selectByleth","disabled","spacing","houseButtonUI","bylethButtonUI","submitButtonUI","getNextClass","classes","uncertified","filter","sClass","certified","sortClasses","order","sort","a","b","_","indexOf","studentMeetsSkillReq","studentSkillLevel","reqLevel","skillLevels","studentIsReadyForCert","skills","classSkills","skill","studentSkill","find","name","level","stripSpaces","str","displayClassSkills","map","key","houseRGB","StudentImg","byleth_gender","RosterRow","student","appStudents","nextClass","nextSkillGoals","classesSorted","getNextSkillGoals","studentInfo","readyForCert","alignItems","style","renderClass","compact","classSkill","RosterFooter","BottomNavigation","BottomNavigationAction","icon","logOut","Roster","isLoadingUserData","playthrough","width","studentOrder","studentsInOrder","students","findIndex","float","match","userStudent","appStudent","currentClasses","completedClasses","upcomingClasses","classInfo","renderSection","classesToDisplay","Paper","elevation","FormControlLabel","control","Checkbox","checked","selectClass","studentName","handleClassCheck","studentSkills","matches","highestLevel","getHighestSkillLevel","selectSkill","skillName","handleSkillCheck","fontSize","marginTop","removeStudent","position","top","ClassSelectorType","studentClasses","filters","typeIsSet","classesSetOfType","marginBottom","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","join","ExpansionPanelDetails","abilities","mastery_ability","mastery_combat_art","includes","checkFilters","classIsSet","classIsCertified","studentClassInfo","selectClassGoal","ClassSelector","index","splice","appData","proficientSkills","proficient","budding","onFilterChange","SkillsOverview","getText","ui","i","displaySkillsWithoutLevel","AddStudent","availableStudents","selectedStudents","studentList","lastHouse","gender","addStudent","recruitable","renderAvailableStudents","addStudents","Gifts","userStudents","gifts","App","logout","isLoadingAppData","bind","bool","names","unshift","sortBy","getAppData","AuthNewPlaythrough","AuthRoster","AuthStudent","Student","AuthClassSelector","AuthAddStudent","AuthGifts","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cc944c87.chunk.js","sourcesContent":["const API_URL =\n    process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:8000\"\n        : \"http://fethtracker.arielschnur.com\";\n\nexport { API_URL };\n","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nexport default function (ComposedComponent) {\n    class RequireAuth extends React.Component {\n        componentDidMount() {\n            this.checkAndRedirect();\n        }\n\n        componentDidUpdate() {\n            this.checkAndRedirect();\n        }\n\n        async checkAndRedirect() {\n            await axios({\n                method: \"get\",\n                url: \"/api/account/authenticated\"\n            })\n                .then((res) => {\n                    if (!res.data.authenticated) {\n                        this.props.history.push(\"/login\");\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n\n        render() {\n            return (\n                <div>\n                    {this.props.authenticated ? (\n                        <ComposedComponent {...this.props} />\n                    ) : null}\n                </div>\n            );\n        }\n    }\n\n    return withRouter(RequireAuth);\n}\n","import React from \"react\";\n\nconst Loading = () => {\n    return <div id=\"App\">loading...</div>;\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errorMessage: null\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const { username, password } = this.state;\n        axios({\n            method: \"post\",\n            url: \"/api/account/login\",\n            params: { username, password }\n        })\n            .then((res) => {\n                if (res.data.login === \"success\") {\n                    this.props.authenticateUser(true);\n                    // TODO: reroute to roster and then prompt to start\n                    // new playthrough if none\n                    this.props.history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                this.setState({ errorMessage: err.response.data });\n            });\n    }\n\n    useDemoAccount(e) {\n        this.setState({ username: \"testuser\", password: \"userpass12\" });\n        this.onSubmit(e);\n    }\n\n    onInputChange(e, field) {\n        this.setState({ errorMessage: null });\n        this.setState({ [field]: e.target.value });\n    }\n\n    render() {\n        const { username, password, errorMessage } = this.state;\n        return (\n            <div className=\"center\">\n                <h1>Log In</h1>\n                <Grid container justify=\"center\">\n                    <form onSubmit={(e) => this.onSubmit(e)}>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"username\"\n                                value={username}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"username\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                value={password}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"password\")\n                                }\n                            />\n                        </Grid>\n                        <div className=\"form-error\">{errorMessage}</div>\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.onSubmit(e)}\n                        >\n                            Log In\n                        </Button>\n                        <br />\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.useDemoAccount(e)}\n                        >\n                            Demo Account\n                        </Button>\n                        <div>\n                            Don't have an account yet?{\" \"}\n                            <Link to=\"/signup\">Sign Up</Link>\n                        </div>\n                    </form>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            passwordMatch: \"\",\n            errorMessage: null\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const error = this.validateFields();\n\n        if (error) {\n            this.setState({ errorMessage: error });\n        } else {\n            const { username, password, passwordMatch, email } = this.state;\n            axios({\n                method: \"post\",\n                url: \"/api/account/signup\",\n                params: { username, password, passwordMatch, email }\n            })\n                .then((res) => {\n                    if (res.data.signup === \"success\") {\n                        // TODO: fix rerouting to login before authenticated\n                        this.props.authenticateUser(true);\n                        this.props.history.push(\"/\");\n                    }\n                })\n                .catch((err) => {\n                    this.setState({ errorMessage: err.response.data });\n                });\n        }\n    }\n\n    onInputChange(e, field) {\n        this.setState({ errorMessage: null });\n        this.setState({ [field]: e.target.value });\n    }\n\n    validateFields() {\n        const { username, password, passwordMatch, email } = this.state;\n\n        if (!username) {\n            return \"Please enter a username\";\n        }\n        if (!email) {\n            return \"Please enter an email\";\n        }\n        if (!password) {\n            return \"Please enter a password\";\n        }\n        if (!passwordMatch) {\n            return \"Please enter a matching password\";\n        }\n\n        if (username.length < 8) {\n            return \"Please enter a longer username\";\n        }\n        if (password.length < 10) {\n            return \"Please enter a password of at least 10 characters\";\n        }\n        if (passwordMatch !== password) {\n            return \"Please enter a matching password\";\n        }\n        if (!validateEmail) {\n            return \"Invalid email\";\n        }\n    }\n\n    render() {\n        const {\n            username,\n            email,\n            password,\n            passwordMatch,\n            errorMessage\n        } = this.state;\n        return (\n            <div className=\"center\">\n                <h1>Sign Up</h1>\n                <Grid container justify=\"center\">\n                    <form onSubmit={(e) => this.onSubmit(e)}>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"username\"\n                                value={username}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"username\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"email\"\n                                value={email}\n                                onChange={(e) => this.onInputChange(e, \"email\")}\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                value={password}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"password\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"passwordMatch\"\n                                value={passwordMatch}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"passwordMatch\")\n                                }\n                            />\n                        </Grid>\n                        <div className=\"form-error\">{errorMessage}</div>\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.onSubmit(e)}\n                        >\n                            Sign Up\n                        </Button>\n                    </form>\n                </Grid>\n                <div>\n                    Already have an account? <Link to=\"/login\">Log In</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction validateEmail(email) {\n    //eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport default withRouter(Signup);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\n\nclass NewPlaythrough extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { house: null, byleth: null };\n    }\n\n    selectHouse(house) {\n        this.setState({ house });\n    }\n\n    selectByleth(byleth) {\n        this.setState({ byleth });\n    }\n\n    startNewPlaythrough = () => {\n        const { house, byleth } = this.state;\n\n        axios({\n            method: \"post\",\n            url: \"api/user/new_playthrough\",\n            params: { house, byleth }\n        })\n            .then((res) => {\n                if (res.data === \"success\") {\n                    this.props.history.push(\"/\");\n                    this.props.getStudentOrder();\n                    this.props.getPlaythrough();\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    houseButtonUI(house) {\n        const imgSrc = `/img/banners/${house.replace(/\\s+/g, \"_\")}_Banner.png`;\n        let imgClass = \"banner-choice new-playthrough-choice\";\n        if (this.state.house === house) {\n            imgClass += \" new-playthrough-choice-selected\";\n        }\n\n        return (\n            <Grid item xs={4} onClick={() => this.selectHouse(house)}>\n                <img\n                    src={imgSrc}\n                    className={imgClass}\n                    alt={house}\n                    title={house}\n                />\n            </Grid>\n        );\n    }\n\n    bylethButtonUI(byleth) {\n        const imgSrc = `/img/students/Byleth_${byleth}.png`;\n        let imgClass = \"byleth-choice new-playthrough-choice\";\n        if (this.state.byleth === byleth) {\n            imgClass += \" new-playthrough-choice-selected\";\n        }\n\n        return (\n            <Grid item xs={4} onClick={() => this.selectByleth(byleth)}>\n                <img\n                    src={imgSrc}\n                    className={imgClass}\n                    alt={`Byleth-${byleth}`}\n                    title={`Byleth-${byleth}`}\n                />\n            </Grid>\n        );\n    }\n\n    submitButtonUI() {\n        if (this.state.house && this.state.byleth) {\n            return (\n                <Button\n                    className={`button ${this.state.house.replace(/\\s+/g, \"\")}`}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.startNewPlaythrough}\n                >\n                    Start!\n                </Button>\n            );\n        } else {\n            return (\n                <Button\n                    className=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled\n                >\n                    Start\n                </Button>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <KeyboardBackspaceIcon />\n                </Link>\n                <div className=\"padding center\">\n                    <h1>New Playthrough</h1>\n                    <h2>Select House</h2>\n                    <Grid container spacing={2}>\n                        {this.houseButtonUI(\"Black Eagles\")}\n                        {this.houseButtonUI(\"Blue Lions\")}\n                        {this.houseButtonUI(\"Golden Deer\")}\n                    </Grid>\n                    <h2>Select Byleth</h2>\n                    <Grid container justify=\"center\" spacing={2}>\n                        {this.bylethButtonUI(\"M\")}\n                        {this.bylethButtonUI(\"F\")}\n                    </Grid>\n                    {this.submitButtonUI()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NewPlaythrough);\n","import _ from \"lodash\";\n\nexport function getNextClass(classes) {\n    if (!classes || (classes && classes.length < 1)) {\n        return null;\n    }\n\n    const uncertified = classes.filter((sClass) => {\n        if (!sClass.certified) {\n            return sClass;\n        }\n    });\n\n    if (uncertified.length < 1) {\n        return null;\n    }\n\n    const sorted = sortClasses(uncertified);\n    return sorted[0];\n}\n\nexport function getNextSkillGoals({ classes, skills }) {\n    if (classes && classes.length > 0) {\n        const classesSorted = sortClasses(classes);\n        for (let sClass of classesSorted) {\n            const { certified, classSkills } = sClass;\n            if (!certified) {\n                if (!studentIsReadyForCert({ skills, classSkills })) {\n                    return classSkills;\n                }\n            }\n        }\n    } else {\n        return [];\n    }\n}\n\nexport function sortClasses(classes) {\n    const order = [\n        \"Beginner\",\n        \"Intermediate\",\n        \"Advanced\",\n        \"Master\",\n        \"DLC\",\n        \"Unique\"\n    ];\n\n    return classes.sort((a, b) => {\n        return _.indexOf(order, a.type) - _.indexOf(order, b.type);\n    });\n}\n\nexport function studentMeetsSkillReq({ studentSkillLevel, reqLevel }) {\n    const skillLevels = [\"D\", \"D+\", \"C\", \"C+\", \"B\", \"B+\", \"A\", \"A+\", \"S\"];\n\n    if (!studentSkillLevel) {\n        return false;\n    }\n\n    const studentIndex = _.indexOf(skillLevels, studentSkillLevel);\n    const reqIndex = _.indexOf(skillLevels, reqLevel);\n\n    return studentIndex >= reqIndex;\n}\n\n/**\n * Compares student's obtained skills with skills required for class,\n * and returns whether they are ready for certification aka\n * meet skill requirements\n * @param {array of objects} skills: student's skills\n * @param {array of objects} classSkills: skills required for class\n */\nexport function studentIsReadyForCert({ skills, classSkills }) {\n    const skillsMet = classSkills.filter((skill) => {\n        const studentSkill = _.find(skills, {\n            name: skill.name\n        });\n        if (studentSkill) {\n            if (\n                (studentSkill,\n                studentMeetsSkillReq({\n                    studentSkillLevel: studentSkill.level,\n                    reqLevel: skill.level\n                }))\n            ) {\n                return skill;\n            }\n        }\n    });\n    if (skillsMet.length === classSkills.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getHighestSkillLevel(studentSkills, name) {\n    const matches = _.filter(studentSkills, { name });\n\n    if (matches.length < 1) {\n        return null;\n    } else if (matches.length === 1) {\n        return matches[0].level;\n    } else {\n        let highestLevel = \"E\";\n        for (let skill of matches) {\n            const { level } = skill;\n            if (level < highestLevel) {\n                highestLevel = level;\n            }\n        }\n        return highestLevel;\n    }\n}\n\nexport function stripSpaces(str) {\n    return str.replace(/\\s+/g, \"\");\n}\n","import React from \"react\";\nimport { stripSpaces } from \"./helpers\";\n\nexport function displayClassSkills(skills) {\n    return skills.map(({ name, level }) => {\n        return (\n            <span className=\"skill-icon\" key={name}>\n                <img\n                    src={`/img/skills/${stripSpaces(name)}.png`}\n                    alt={name}\n                    title={name}\n                />\n                {level}\n            </span>\n        );\n    });\n}\n\nexport function displaySkillsWithoutLevel(skills) {\n    let ui = [];\n    for (let i in skills) {\n        const { name } = skills[i];\n        ui.push(<span key={name}>{name}</span>);\n        if (i < skills.length - 1) {\n            ui.push(\", \");\n        }\n    }\n    return ui;\n}\n\nexport function houseRGB(house) {\n    switch (house) {\n        case \"Black Eagles\":\n            return \"rgb(206, 54, 87)\";\n        case \"Blue Lions\":\n            return \"rgb(77, 95, 169)\";\n        default:\n            return \"rgb(223, 192, 74)\";\n    }\n}\n","import React from \"react\";\n\nconst StudentImg = (props) => {\n    const { name, byleth_gender, house } = props;\n    // TODO: just get gender, can get rid of byleth_gender\n\n    let imgSrc = `/img/students/${name}.png`;\n    if (name === \"Byleth\") {\n        imgSrc = `/img/students/Byleth_${byleth_gender}.png`;\n    }\n\n    return (\n        <img\n            src={imgSrc}\n            className={`roster-img ${house.replace(/\\s+/g, \"\")}`}\n            alt={name}\n            title={name}\n        />\n    );\n};\n\nexport default StudentImg;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getNextClass,\n    studentIsReadyForCert,\n    studentMeetsSkillReq,\n    getNextSkillGoals\n} from \"../helpers/helpers\";\nimport { displayClassSkills, houseRGB } from \"../helpers/uihelpers\";\n\nimport StudentImg from \"../components/StudentImg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst RosterRow = (props) => {\n    const { name, classes, skills } = props.student;\n    const { appStudents, byleth_gender, house } = props;\n    const nextClass = getNextClass(classes);\n    const nextSkillGoals = getNextSkillGoals({ classes, skills });\n\n    // only show lowest level uncertified class\n    const renderClass = (nextClass) => {\n        const { name, type } = nextClass;\n        return (\n            <span>\n                {name} ({type})\n            </span>\n        );\n    };\n    const studentInfo = _.find(appStudents, { name });\n\n    let readyForCert = false;\n    if (nextClass) {\n        readyForCert = studentIsReadyForCert({\n            skills,\n            classSkills: nextClass.classSkills\n        });\n    }\n\n    return (\n        <div key={name} className=\"roster-row\">\n            <Link to={`/student/${name}`} className=\"no-link-style\">\n                <Grid container spacing={3} alignItems=\"center\">\n                    <Grid item xs={3}>\n                        <StudentImg\n                            name={name}\n                            byleth_gender={byleth_gender}\n                            house={\n                                name !== \"Byleth\" ? studentInfo.house : house\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={8} className=\"roster-row-student\">\n                        <p className=\"roster-name\">\n                            {name}{\" \"}\n                            {readyForCert ? (\n                                <span>\n                                    {\" \"}\n                                    <ErrorIcon\n                                        style={{\n                                            color: houseRGB(house)\n                                        }}\n                                    ></ErrorIcon>\n                                </span>\n                            ) : null}\n                        </p>\n                        <p>\n                            {classes.length > 0 ? (\n                                <span>\n                                    {!readyForCert\n                                        ? \"Next class\"\n                                        : \"Ready for cert\"}\n                                    : {renderClass(nextClass)}\n                                </span>\n                            ) : (\n                                \"No classes set\"\n                            )}\n                        </p>\n                        <p>\n                            {nextSkillGoals && nextSkillGoals.length > 0 ? (\n                                <span>\n                                    Next goals:{\" \"}\n                                    {nextSkillGoals\n                                        ? displayClassSkills(\n                                              _.compact(\n                                                  nextSkillGoals.map(\n                                                      (classSkill) => {\n                                                          const studentSkill = _.find(\n                                                              skills,\n                                                              {\n                                                                  name:\n                                                                      classSkill.name\n                                                              }\n                                                          );\n                                                          if (\n                                                              !studentSkill ||\n                                                              !studentMeetsSkillReq(\n                                                                  {\n                                                                      studentSkillLevel:\n                                                                          studentSkill.level,\n                                                                      reqLevel:\n                                                                          classSkill.level\n                                                                  }\n                                                              )\n                                                          ) {\n                                                              return classSkill;\n                                                          }\n                                                      }\n                                                  )\n                                              )\n                                          )\n                                        : \"none\"}\n                                </span>\n                            ) : null}\n                        </p>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <ArrowRightAltIcon />\n                    </Grid>\n                </Grid>\n            </Link>\n        </div>\n    );\n};\n\nexport default RosterRow;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst RosterFooter = (props) => {\r\n    return (\r\n        <BottomNavigation>\r\n            <Link to=\"/new_playthrough\">\r\n                <BottomNavigationAction\r\n                    label=\"Recents\"\r\n                    value=\"recents\"\r\n                    icon={<AddCircleIcon />}\r\n                />\r\n            </Link>\r\n            <Link to=\"/gifts\">\r\n                <BottomNavigationAction\r\n                    label=\"Nearby\"\r\n                    value=\"nearby\"\r\n                    icon={<CardGiftcardIcon />}\r\n                />\r\n            </Link>\r\n            <Link to=\"/login\" onClick={() => props.logOut()}>\r\n                <BottomNavigationAction\r\n                    label=\"Folder\"\r\n                    value=\"folder\"\r\n                    icon={<ExitToAppIcon />}\r\n                />\r\n            </Link>\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default RosterFooter;\r\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RosterRow from \"../components/RosterRow\";\nimport RosterFooter from \"../components/RosterFooter\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from \"../components/Loading\";\n\n// TODO: show alert icon if ready for certification\nconst Roster = (props) => {\n    if (props.isLoadingUserData) {\n        return <Loading />;\n    }\n\n    if (!props.playthrough) {\n        return (\n            <div className=\"padding\">\n                <h1>No playthrough found.</h1>\n                <Link to=\"/new_playthrough\">\n                    <Button\n                        className=\"button\"\n                        style={{ width: \"90%\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        Start New Playthrough\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n\n    const { studentOrder } = props;\n    const { house, byleth_gender, students } = props.playthrough;\n\n    const studentsInOrder = students.sort((a, b) => {\n        return (\n            _.findIndex(studentOrder, { name: a.name }) -\n            _.findIndex(studentOrder, { name: b.name })\n        );\n    });\n\n    return (\n        <div>\n            <div className=\"padding\">\n                <h1>\n                    {house} Roster\n                    <span style={{ float: \"right\" }}>\n                        <Link to=\"/add_student\">\n                            <AddCircleOutlineIcon />\n                        </Link>\n                    </span>\n                </h1>\n            </div>\n            <ul>\n                {studentsInOrder.map((student) => {\n                    return (\n                        <RosterRow\n                            key={student.name}\n                            student={student}\n                            byleth_gender={byleth_gender}\n                            house={house}\n                            appStudents={props.appStudents}\n                        />\n                    );\n                })}\n            </ul>\n            <RosterFooter logOut={props.logOut} />\n        </div>\n    );\n};\n\nexport default Roster;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getNextClass,\n    studentMeetsSkillReq,\n    studentIsReadyForCert,\n    getHighestSkillLevel\n} from \"../helpers/helpers\";\nimport { displayClassSkills, houseRGB } from \"../helpers/uihelpers\";\n\nimport Loading from \"../components/Loading\";\nimport StudentImg from \"../components/StudentImg\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst Student = (props) => {\n    if (!props.playthrough) {\n        return <Loading />;\n    }\n\n    const { name } = props.match.params;\n\n    const userStudent = _.find(props.playthrough.students, { name });\n    const { classes, skills } = userStudent;\n    const appStudent = _.find(props.appStudents, { name });\n\n    // TODO: hovering styles\n    const nextClass = getNextClass(classes);\n    const currentClasses = _.compact([nextClass]);\n    const completedClasses = _.compact(_.filter(classes, { certified: true }));\n    const upcomingClasses = _.compact(\n        classes.filter((classInfo) => {\n            if (!classInfo.certified && classInfo.name !== nextClass.name) {\n                return classInfo;\n            }\n        })\n    );\n\n    const removeStudent = (name) => {\n        axios({\n            method: \"post\",\n            url: \"/api/user/remove_student\",\n            params: { name }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                props.removeStudent(name);\n                props.history.push(\"/\");\n            }\n        });\n    };\n\n    const handleClassCheck = (e, name) => {\n        props.selectClass({\n            studentName: props.match.params.name,\n            className: name\n        });\n    };\n\n    const handleSkillCheck = (e, skill) => {\n        props.selectSkill({\n            studentName: props.match.params.name,\n            skillName: skill.name,\n            level: skill.level\n        });\n    };\n\n    const renderSection = (type, classesToDisplay) => {\n        if (classesToDisplay.length < 1) {\n            return (\n                <div>\n                    <h2>{type}</h2>\n                    <Paper className=\"goal-row\" elevation={1} key={name}>\n                        None\n                        {type === \"current\" ? (\n                            <span>\n                                {\" \"}\n                                -{\" \"}\n                                <Link to={`/select_classes/${name}`}>\n                                    Set now\n                                </Link>\n                            </span>\n                        ) : null}\n                    </Paper>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <h2>{type}</h2>\n                {classesToDisplay.length > 0 ? (\n                    classesToDisplay.map(({ name, classSkills, certified }) => {\n                        let readyForCert = false;\n                        if (!certified && classSkills.length > 0) {\n                            readyForCert = studentIsReadyForCert({\n                                skills,\n                                classSkills\n                            });\n                        }\n                        return (\n                            <Paper\n                                className=\"goal-row\"\n                                elevation={1}\n                                key={name}\n                            >\n                                <Grid container spacing={2}>\n                                    <Grid item xs={6}>\n                                        <h3>Class</h3>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={certified}\n                                                    onChange={(e) =>\n                                                        handleClassCheck(\n                                                            e,\n                                                            name\n                                                        )\n                                                    }\n                                                    style={{\n                                                        color: houseRGB(\n                                                            props.playthrough\n                                                                .house\n                                                        )\n                                                    }}\n                                                />\n                                            }\n                                            label={name}\n                                        />\n                                        {readyForCert ? (\n                                            <ErrorIcon\n                                                style={{\n                                                    color: houseRGB(\n                                                        props.playthrough.house\n                                                    )\n                                                }}\n                                            ></ErrorIcon>\n                                        ) : null}\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <h3>Skills Required</h3>\n                                        {classSkills.map((skill) => {\n                                            const studentSkillLevel = getHighestSkillLevel(\n                                                skills,\n                                                skill.name\n                                            );\n\n                                            return (\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={studentMeetsSkillReq(\n                                                                {\n                                                                    studentSkillLevel,\n                                                                    reqLevel:\n                                                                        skill.level\n                                                                }\n                                                            )}\n                                                            onChange={(e) =>\n                                                                handleSkillCheck(\n                                                                    e,\n                                                                    skill\n                                                                )\n                                                            }\n                                                            style={{\n                                                                color: houseRGB(\n                                                                    props\n                                                                        .playthrough\n                                                                        .house\n                                                                )\n                                                            }}\n                                                        />\n                                                    }\n                                                    label={`${skill.name} ${skill.level}`}\n                                                />\n                                            );\n                                        })}\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        );\n                    })\n                ) : (\n                    <div>none</div>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <div\n            id=\"student-overview\"\n            style={{ width: \"100%\" }}\n            className=\"padding\"\n        >\n            <Link to=\"/\">\n                <KeyboardBackspaceIcon />\n            </Link>\n            <Grid container spacing={2}>\n                <Grid item xs={3}>\n                    <StudentImg\n                        name={name}\n                        byleth_gender={props.playthrough.byleth_gender}\n                        house={\n                            name !== \"Byleth\"\n                                ? appStudent.house\n                                : props.playthrough.house\n                        }\n                    />\n                </Grid>\n                <Grid item xs={9} className=\"roster-row-student\">\n                    <p className=\"roster-name\">\n                        {name}{\" \"}\n                        <Link to={`/select_classes/${name}`}>\n                            <EditIcon\n                                fontSize=\"small\"\n                                style={{\n                                    color: houseRGB(props.playthrough.house)\n                                }}\n                            />\n                        </Link>\n                    </p>\n                    <p className=\"roster-desc\">\n                        Next class:{\" \"}\n                        {nextClass\n                            ? `${nextClass.name} (${nextClass.type}}`\n                            : \"none\"}\n                    </p>\n                    <p className=\"roster-desc\">\n                        Skills needed:{\" \"}\n                        {nextClass\n                            ? displayClassSkills(nextClass.classSkills)\n                            : \"n/a\"}{\" \"}\n                    </p>\n                </Grid>\n            </Grid>\n            {renderSection(\"current\", currentClasses)}\n            {upcomingClasses.length > 0\n                ? renderSection(\"upcoming\", upcomingClasses)\n                : null}\n            {renderSection(\"completed\", completedClasses)}\n            <div\n                className=\"footer center\"\n                style={{ marginTop: \"20px\" }}\n                onClick={() => removeStudent(name)}\n            >\n                <HighlightOffIcon\n                    style={{ position: \"relative\", top: \"7px\" }}\n                />\n                <span> Remove from Roster</span>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Student);\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { displayClassSkills } from \"../helpers/uihelpers\";\nimport { stripSpaces } from \"../helpers/helpers\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst ClassSelectorType = (props) => {\n    const { studentClasses, type, filters } = props;\n\n    let typeIsSet = false;\n    const classesSetOfType = _.compact(\n        props.studentClasses.map((sClass) => {\n            if (sClass.type === type) {\n                return sClass.name;\n            }\n        })\n    );\n    if (classesSetOfType.length > 0) {\n        typeIsSet = true;\n    }\n\n    const checkFilters = (skills) => {\n        if (filters.length < 1) {\n            return true;\n        }\n        for (let skill of skills) {\n            if (filters.includes(skill.name)) {\n                return true;\n            }\n        }\n    };\n\n    return (\n        <div style={{ marginBottom: \"4px\" }}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    className={\n                        typeIsSet ? `${stripSpaces(props.house)}-bg` : null\n                    }\n                >\n                    {props.type}\n                    {typeIsSet ? ` (${classesSetOfType.join(\", \")})` : null}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ul style={{ width: \"100%\" }}>\n                        {props.classes.map(\n                            ({\n                                name,\n                                skills,\n                                abilities,\n                                mastery_ability,\n                                mastery_combat_art\n                            }) => {\n                                const shouldDisplay = checkFilters(skills);\n\n                                if (!shouldDisplay) {\n                                    return null;\n                                }\n\n                                let classIsSet = false;\n                                let classIsCertified = false;\n\n                                const studentClassInfo = _.find(\n                                    studentClasses,\n                                    { name }\n                                );\n                                if (studentClassInfo) {\n                                    classIsSet = true;\n                                    if (studentClassInfo.certified) {\n                                        classIsCertified = true;\n                                    }\n                                }\n\n                                let className = \"set-class\";\n                                if (classIsCertified) {\n                                    className += \" certified\";\n                                } else if (classIsSet) {\n                                    className += ` ${stripSpaces(\n                                        props.house\n                                    )}-bg`;\n                                } else {\n                                    className += \" unset\";\n                                }\n\n                                return (\n                                    <li\n                                        key={name}\n                                        className={className}\n                                        onClick={() =>\n                                            props.selectClassGoal({\n                                                studentName: props.student,\n                                                className: name\n                                            })\n                                        }\n                                    >\n                                        <span className=\"class-name\">\n                                            {name}\n                                            {classIsCertified\n                                                ? \" (Certified)\"\n                                                : null}\n                                        </span>\n                                        <br />\n                                        Skills required:{\" \"}\n                                        {displayClassSkills(skills)}\n                                        <br />\n                                        Class abilities: {abilities || \"none\"}\n                                        <br />\n                                        Class mastery:{\" \"}\n                                        {mastery_ability ? (\n                                            <span>\n                                                Ability {mastery_ability}\n                                            </span>\n                                        ) : null}\n                                        {mastery_ability && mastery_combat_art\n                                            ? \", \"\n                                            : null}\n                                        {mastery_combat_art ? (\n                                            <span>\n                                                Combat Art {mastery_combat_art}\n                                            </span>\n                                        ) : null}\n                                    </li>\n                                );\n                            }\n                        )}\n                    </ul>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n};\n\nexport default ClassSelectorType;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { stripSpaces } from \"../helpers/helpers\";\n\nimport Loading from \"../components/Loading\";\nimport ClassSelectorType from \"../components/ClassSelectorType\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\n\n// TODO: fix reloading on selection\nclass ClassSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { classes: {}, filters: [] };\n    }\n\n    onFilterChange(name) {\n        let { filters } = this.state;\n        if (filters.includes(name)) {\n            const index = _.indexOf(filters, name);\n            filters.splice(index, 1);\n        } else {\n            filters.push(name);\n        }\n        this.setState({ filters });\n    }\n\n    componentDidMount() {\n        if (this.props.appData) {\n            this.setState({ classes: this.props.appData.classes });\n        }\n    }\n\n    render() {\n        if (!this.props.playthrough) {\n            return <Loading />;\n        }\n\n        const { name } = this.props.match.params;\n        const studentInfo = _.find(this.props.appData.students, { name });\n        const proficientSkills = studentInfo.skills.filter((skill) => {\n            if (skill.proficient || skill.budding) {\n                return skill;\n            }\n        });\n\n        const types = [\n            \"Beginner\",\n            \"Intermediate\",\n            \"Advanced\",\n            \"Master\",\n            \"Unique\",\n            \"DLC\"\n        ];\n\n        const { students, house } = this.props.playthrough;\n\n        return (\n            <div className=\"padding\">\n                <KeyboardBackspaceIcon\n                    onClick={() => {\n                        this.props.history.push(`/student/${name}`);\n                    }}\n                />\n                <h1>Select Classes for {name}</h1>\n                <div className=\"skill-filters\">\n                    {proficientSkills.map(({ name }) => {\n                        return (\n                            <img\n                                key={name}\n                                onClick={() => this.onFilterChange(name)}\n                                className={`skill-filter${\n                                    this.state.filters.includes(name)\n                                        ? \" filter-selected\"\n                                        : \"\"\n                                }`}\n                                src={`/img/skills/${stripSpaces(name)}.png`}\n                                alt={name}\n                                title={name}\n                            />\n                        );\n                    })}\n                </div>\n                {types.map((type) => {\n                    const studentInfo = _.find(students, { name });\n                    return (\n                        <ClassSelectorType\n                            type={type}\n                            student={name}\n                            classes={_.filter(this.state.classes, {\n                                type\n                            })}\n                            studentClasses={studentInfo.classes}\n                            house={house}\n                            selectClassGoal={this.props.selectClassGoal}\n                            key={type}\n                            filters={this.state.filters}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ClassSelector;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { displaySkillsWithoutLevel } from \"../helpers/uihelpers\";\n\nconst SkillsOverview = (props) => {\n    const { skills } = props;\n\n    const types = [\"proficient\", \"budding\", \"weakness\"];\n\n    const getText = (type, matches) => {\n        if (type === \"proficient\") {\n            if (matches) {\n                return \"Proficient in: \";\n            } else {\n                return \"No proficient skills\";\n            }\n        } else if (type === \"budding\") {\n            if (matches) {\n                return \"Budding talent: \";\n            }\n        } else {\n            if (matches) {\n                return \"Weaknesses: \";\n            }\n        }\n    };\n\n    return (\n        <div>\n            {types.map((type) => {\n                const matches = _.filter(skills, { [type]: true });\n                if (matches.length > 0) {\n                    return (\n                        <div>\n                            {getText(type, true)}\n                            {displaySkillsWithoutLevel(matches)}\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n};\n\nexport default SkillsOverview;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport Loading from \"../components/Loading\";\nimport StudentImg from \"../components/StudentImg\";\nimport SkillsOverview from \"../components/SkillsOverview\";\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport Button from \"@material-ui/core/Button\";\n\nclass AddStudent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { availableStudents: [], selectedStudents: [] };\n    }\n\n    addStudent(name) {\n        const { selectedStudents } = this.state;\n        if (!selectedStudents.includes(name)) {\n            selectedStudents.push(name);\n        } else {\n            const index = _.indexOf(selectedStudents, name);\n            selectedStudents.splice(index, 1);\n        }\n        this.setState({ selectedStudents });\n    }\n\n    renderAvailableStudents() {\n        const { availableStudents, selectedStudents } = this.state;\n\n        let studentList = [];\n        let lastHouse = null;\n\n        for (let student of availableStudents) {\n            const { name, gender, house, skills } = student;\n            if (!lastHouse || lastHouse !== house) {\n                lastHouse = house;\n                studentList.push(\n                    <h2 className=\"padding\" key={house}>\n                        {house}\n                    </h2>\n                );\n            }\n\n            studentList.push(\n                <Grid\n                    container\n                    className={`roster-row add-student-row${\n                        selectedStudents.includes(name)\n                            ? ` add-student-selected ${house.replace(\n                                  /\\s+/g,\n                                  \"\"\n                              )}`\n                            : null\n                    }`}\n                    key={name}\n                    onClick={() => this.addStudent(name)}\n                >\n                    <Grid item xs={4}>\n                        <StudentImg\n                            name={name}\n                            byleth_gender={gender || \"F\"}\n                            house={house}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <p className=\"roster-name\" style={{ marginTop: 0 }}>\n                            {name}\n                        </p>\n                        <SkillsOverview skills={skills} />\n                    </Grid>\n                </Grid>\n            );\n        }\n\n        return studentList;\n    }\n\n    componentDidMount() {\n        if (this.props.playthrough && this.props.playthrough.students) {\n            axios({\n                method: \"get\",\n                url: \"/api/app/students\"\n            }).then((res) => {\n                this.setState({\n                    availableStudents: res.data.filter((student) => {\n                        if (\n                            student.recruitable &&\n                            !_.find(this.props.playthrough.students, {\n                                name: student.name\n                            })\n                        ) {\n                            return student;\n                        }\n                    })\n                });\n            });\n        }\n    }\n\n    render() {\n        const { selectedStudents } = this.state;\n        if (!this.props.playthrough || !this.props.playthrough.students) {\n            return <Loading />;\n        }\n\n        return (\n            <div>\n                <Link to=\"/\">\n                    <KeyboardBackspaceIcon />\n                </Link>\n                <h1 className=\"padding\">Add Students</h1>\n                <ul>{this.renderAvailableStudents()}</ul>\n                <div className=\"center footer\">\n                    <Link to=\"/\">\n                        <Button\n                            className=\"button\"\n                            style={{ width: \"90%\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() =>\n                                this.props.addStudents(selectedStudents)\n                            }\n                            disabled={selectedStudents.length < 1}\n                        >\n                            Add\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddStudent;\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport StudentImg from \"../components/StudentImg\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nconst Gifts = (props) => {\r\n    const { playthrough, appStudents, studentOrder } = props;\r\n\r\n    if (!playthrough || !appStudents || !studentOrder) {\r\n        return <Loading />;\r\n    }\r\n\r\n    const userStudents = playthrough.students.sort((a, b) => {\r\n        return (\r\n            _.findIndex(studentOrder, { name: a.name }) -\r\n            _.findIndex(studentOrder, { name: b.name })\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"padding\">\r\n                <Link to=\"/\">\r\n                    <KeyboardBackspaceIcon />\r\n                </Link>\r\n                <h1>Best Gifts</h1>\r\n            </div>\r\n            {userStudents.map(({ name }) => {\r\n                if (name !== \"Byleth\") {\r\n                    const appStudent = _.find(appStudents, { name });\r\n                    const gifts = appStudent.gifts.map(({ name }) => {\r\n                        return name;\r\n                    });\r\n\r\n                    return (\r\n                        <div key={name} className=\"roster-row\">\r\n                            <Grid container spacing={3} alignItems=\"center\">\r\n                                <Grid item xs={3}>\r\n                                    <StudentImg\r\n                                        name={name}\r\n                                        byleth_gender={\r\n                                            props.playthrough.byleth_gender\r\n                                        }\r\n                                        house={\r\n                                            name !== \"Byleth\"\r\n                                                ? appStudent.house\r\n                                                : props.playthrough.house\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    {gifts.join(\", \")}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gifts;\r\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { API_URL } from \"./constants\";\nimport \"./App.css\";\n\nimport RequireAuth from \"./components/RequireAuth\";\nimport Loading from \"./components/Loading\";\nimport Login from \"./pages/auth/Login\";\nimport Signup from \"./pages/auth/Signup\";\nimport NewPlaythrough from \"./pages/NewPlaythrough\";\nimport Roster from \"./pages/Roster\";\nimport Student from \"./pages/Student\";\nimport ClassSelector from \"./pages/ClassSelector\";\nimport AddStudent from \"./pages/AddStudent\";\nimport Gifts from \"./pages/Gifts\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoadingAppData: true,\n            isLoadingUserData: true,\n            authenticated: false,\n            playthrough: null,\n            appData: null\n        };\n\n        this.authenticateUser = this.authenticateUser.bind(this);\n        this.getPlaythrough = this.getPlaythrough.bind(this);\n        this.selectClassGoal = this.selectClassGoal.bind(this);\n        this.selectClass = this.selectClass.bind(this);\n        this.selectSkill = this.selectSkill.bind(this);\n        this.addStudents = this.addStudents.bind(this);\n        this.removeStudent = this.removeStudent.bind(this);\n        this.getStudentOrder = this.getStudentOrder.bind(this);\n    }\n\n    authenticateUser(bool) {\n        this.setState({ authenticated: bool });\n        this.getPlaythrough();\n        this.getStudentOrder();\n    }\n\n    logOut = () => {\n        axios({\n            method: \"get\",\n            url: \"/api/account/logout\"\n        })\n            .then((res) => {\n                if (res.data.logout === \"success\") {\n                    this.authenticateUser(false);\n                    this.props.history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    async getPlaythrough() {\n        axios({\n            method: \"get\",\n            url: `${API_URL}/api/user/playthrough`\n        }).then((res) => {\n            this.setState({ playthrough: res.data, isLoadingUserData: false });\n        });\n    }\n\n    async selectClassGoal({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class_goal\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectClass({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectSkill({ studentName, skillName, level }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_skill\",\n            params: { studentName, skillName, level }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async addStudents(names) {\n        axios({\n            method: \"post\",\n            url: \"/api/user/add_students\",\n            params: { names }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n                this.getStudentOrder();\n            }\n        });\n    }\n\n    removeStudent() {\n        this.getPlaythrough();\n    }\n\n    async getAppData() {\n        let students, classes;\n\n        await axios({\n            method: \"get\",\n            url: `${API_URL}/api/app/classes`\n        }).then((res) => {\n            classes = res.data;\n        });\n\n        await axios({\n            method: \"get\",\n            url: `${API_URL}/api/app/students`\n        }).then((res) => {\n            students = res.data;\n        });\n\n        this.setState({\n            appData: { students, classes },\n            isLoadingAppData: false\n        });\n    }\n\n    getStudentOrder() {\n        const { playthrough, appData } = this.state;\n\n        if (appData) {\n            const { students } = appData;\n            if (!playthrough) {\n                this.setState({ studentOrder: _.sortBy(students, \"order\") });\n            } else {\n                const { house } = playthrough;\n                let studentOrder = students.filter((student) => {\n                    if (student.house === house) {\n                        return student;\n                    }\n                });\n                studentOrder.unshift({ name: \"Byleth\" });\n                for (let student of students) {\n                    if (!_.find(studentOrder, { name: student.name })) {\n                        studentOrder.push(student);\n                    }\n                }\n                this.setState({ studentOrder });\n            }\n        }\n    }\n\n    async componentDidMount() {\n        await axios({\n            method: \"get\",\n            url: \"/api/account/authenticated\"\n        })\n            .then((res) => {\n                const { authenticated } = res.data;\n                this.setState({ authenticated });\n                if (authenticated) {\n                    this.getPlaythrough();\n                } else {\n                    this.setState({ isLoadingUserData: false });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        await this.getAppData();\n\n        this.getStudentOrder();\n    }\n\n    render() {\n        const {\n            isLoadingAppData,\n            isLoadingUserData,\n            authenticated,\n            playthrough,\n            appData,\n            studentOrder\n        } = this.state;\n\n        if (isLoadingAppData || isLoadingUserData) {\n            return <Loading />;\n        }\n\n        const AuthNewPlaythrough = RequireAuth(NewPlaythrough);\n        const AuthRoster = RequireAuth(Roster);\n        const AuthStudent = RequireAuth(Student);\n        const AuthClassSelector = RequireAuth(ClassSelector);\n        const AuthAddStudent = RequireAuth(AddStudent);\n        const AuthGifts = RequireAuth(Gifts);\n\n        return (\n            <div id=\"App\">\n                <BrowserRouter>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => (\n                                <AuthRoster\n                                    authenticated={authenticated}\n                                    authenticateUser={this.authenticateUser}\n                                    playthrough={playthrough}\n                                    appStudents={appData.students}\n                                    studentOrder={studentOrder}\n                                    logOut={this.logOut}\n                                    isLoadingUserData={isLoadingAppData}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/login\"\n                            render={() => (\n                                <Login\n                                    playthrough={playthrough}\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/signup\"\n                            render={() => (\n                                <Signup\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/new_playthrough\"\n                            render={() => (\n                                <AuthNewPlaythrough\n                                    authenticated={authenticated}\n                                    getPlaythrough={this.getPlaythrough}\n                                    getStudentOrder={this.getStudentOrder}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/student/:name\"\n                            render={() => (\n                                <AuthStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClass={this.selectClass}\n                                    selectSkill={this.selectSkill}\n                                    removeStudent={this.removeStudent}\n                                    appStudents={appData.students}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/select_classes/:name\"\n                            render={() => (\n                                <AuthClassSelector\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClassGoal={this.selectClassGoal}\n                                    appData={appData}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/add_student\"\n                            render={() => (\n                                <AuthAddStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    addStudents={this.addStudents}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/gifts\"\n                            render={() => (\n                                <AuthGifts\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    appStudents={appData.students}\n                                    studentOrder={studentOrder}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
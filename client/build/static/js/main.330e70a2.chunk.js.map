{"version":3,"sources":["components/RequireAuth.js","pages/Home.js","pages/auth/Login.js","pages/auth/Signup.js","pages/NewPlaythrough.js","helpers/helpers.js","helpers/uihelpers.js","components/StudentImg.js","components/RosterRow.js","pages/Roster.js","pages/Student.js","components/ClassSelectorType.js","pages/ClassSelector.js","components/SkillsOverview.js","pages/AddStudent.js","App.js","constants.js","serviceWorker.js","index.js"],"names":["ComposedComponent","RequireAuth","this","checkAndRedirect","axios","method","url","then","res","data","authenticated","props","history","push","catch","err","console","log","React","Component","withRouter","onClick","logout","authenticateUser","to","Login","state","username","password","errorMessage","e","preventDefault","params","login","setState","response","field","target","value","className","Grid","container","justify","onSubmit","item","TextField","type","label","onChange","onInputChange","Button","variant","color","Signup","email","passwordMatch","error","validateFields","signup","length","validateEmail","test","String","toLowerCase","NewPlaythrough","startNewPlaythrough","house","byleth","getPlaythrough","imgSrc","replace","imgClass","xs","selectHouse","src","alt","title","selectByleth","disabled","spacing","houseButtonUI","bylethButtonUI","submitButtonUI","getNextClass","classes","sClass","certified","displayClassSkills","skills","ui","i","name","level","key","StudentImg","byleth_gender","RosterRow","student","nextClass","renderClass","classSkills","playthrough","students","style","float","map","width","match","_","find","renderInfo","classesToDisplay","filter","classInfo","Paper","elevation","selectClass","studentName","skill","studentSkillLevel","studentSkills","matches","highestLevel","getHighestSkillLevel","selectSkill","skillName","reqLevel","studentMeetsSkillReq","fontSize","ClassSelectorType","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","abilities","mastery_ability","mastery_combat_art","marginBottom","selectClassGoal","ClassSelector","SkillsOverview","getText","displaySkillsWithoutLevel","AddStudent","availableStudents","selectedStudents","includes","index","indexOf","splice","studentList","lastHouse","gender","addStudent","marginTop","renderAvailableStudents","addStudents","App","logOut","bind","bool","names","AuthNewPlaythrough","AuthRoster","Roster","AuthStudent","Student","AuthClassSelector","AuthAddStudent","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.330e70a2.chunk.js","sourcesContent":["import React, { PropTypes } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport default function (ComposedComponent) {\r\n    class RequireAuth extends React.Component {\r\n        componentDidMount() {\r\n            this.checkAndRedirect();\r\n        }\r\n\r\n        componentDidUpdate() {\r\n            this.checkAndRedirect();\r\n        }\r\n\r\n        async checkAndRedirect() {\r\n            await axios({\r\n                method: \"get\",\r\n                url: \"/api/account/authenticated\"\r\n            })\r\n                .then((res) => {\r\n                    if (!res.data.authenticated) {\r\n                        this.props.history.push(\"/login\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div>\r\n                    {this.props.authenticated ? (\r\n                        <ComposedComponent {...this.props} />\r\n                    ) : null}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return withRouter(RequireAuth);\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Home = (props) => {\r\n    const logOut = () => {\r\n        axios({\r\n            method: \"get\",\r\n            url: \"/api/account/logout\"\r\n        })\r\n            .then((res) => {\r\n                if (res.data.logout === \"success\") {\r\n                    props.authenticateUser(false);\r\n                    props.history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            {!props.authenticated ? (\r\n                <div>\r\n                    <Link to=\"/login\">Log In</Link> |{\" \"}\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            ) : (\r\n                <a onClick={logOut}>Log Out</a>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errorMessage: null\r\n        };\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const { username, password } = this.state;\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/api/account/login\",\r\n            params: { username, password }\r\n        })\r\n            .then((res) => {\r\n                if (res.data.login === \"success\") {\r\n                    this.props.authenticateUser(true);\r\n                    // TODO: reroute to roster and then prompt to start\r\n                    // new playthrough if none\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ errorMessage: err.response.data });\r\n            });\r\n    }\r\n\r\n    onInputChange(e, field) {\r\n        this.setState({ errorMessage: null });\r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { username, password, errorMessage } = this.state;\r\n        return (\r\n            <div className=\"center\">\r\n                <h1>Log In</h1>\r\n                <Grid container justify=\"center\">\r\n                    <form onSubmit={(e) => this.onSubmit(e)}>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"text\"\r\n                                label=\"username\"\r\n                                value={username}\r\n                                onChange={(e) =>\r\n                                    this.onInputChange(e, \"username\")\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"password\"\r\n                                value={password}\r\n                                onChange={(e) =>\r\n                                    this.onInputChange(e, \"password\")\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <div className=\"form-error\">{errorMessage}</div>\r\n                        <Button\r\n                            className=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={(e) => this.onSubmit(e)}\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n                        <div>\r\n                            Don't have an account yet?{\" \"}\r\n                            <Link to=\"/signup\">Sign Up</Link>\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordMatch: \"\",\r\n            errorMessage: null\r\n        };\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const error = this.validateFields();\r\n\r\n        if (error) {\r\n            this.setState({ errorMessage: error });\r\n        } else {\r\n            const { username, password, passwordMatch, email } = this.state;\r\n            axios({\r\n                method: \"post\",\r\n                url: \"/api/account/signup\",\r\n                params: { username, password, passwordMatch, email }\r\n            })\r\n                .then((res) => {\r\n                    if (res.data.signup === \"success\") {\r\n                        this.props.authenticateUser(true);\r\n                        this.props.history.push(\"/\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    this.setState({ errorMessage: err.response.data });\r\n                });\r\n        }\r\n    }\r\n\r\n    onInputChange(e, field) {\r\n        this.setState({ errorMessage: null });\r\n        this.setState({ [field]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n        const { username, password, passwordMatch, email } = this.state;\r\n\r\n        if (!username) {\r\n            return \"Please enter a username\";\r\n        }\r\n        if (!email) {\r\n            return \"Please enter an email\";\r\n        }\r\n        if (!password) {\r\n            return \"Please enter a password\";\r\n        }\r\n        if (!passwordMatch) {\r\n            return \"Please enter a matching password\";\r\n        }\r\n\r\n        if (username.length < 8) {\r\n            return \"Please enter a longer username\";\r\n        }\r\n        if (password.length < 10) {\r\n            return \"Please enter a password of at least 10 characters\";\r\n        }\r\n        if (passwordMatch !== password) {\r\n            return \"Please enter a matching password\";\r\n        }\r\n        if (!validateEmail) {\r\n            return \"Invalid email\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            password,\r\n            passwordMatch,\r\n            errorMessage\r\n        } = this.state;\r\n        return (\r\n            <div className=\"center\">\r\n                <h1>Sign Up</h1>\r\n                <Grid container justify=\"center\">\r\n                    <form onSubmit={(e) => this.onSubmit(e)}>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"text\"\r\n                                label=\"username\"\r\n                                value={username}\r\n                                onChange={(e) =>\r\n                                    this.onInputChange(e, \"username\")\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"text\"\r\n                                label=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => this.onInputChange(e, \"email\")}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"password\"\r\n                                value={password}\r\n                                onChange={(e) =>\r\n                                    this.onInputChange(e, \"password\")\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"auth-input\">\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"passwordMatch\"\r\n                                value={passwordMatch}\r\n                                onChange={(e) =>\r\n                                    this.onInputChange(e, \"passwordMatch\")\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <div className=\"form-error\">{errorMessage}</div>\r\n                        <Button\r\n                            className=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={(e) => this.onSubmit(e)}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Log In</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    //eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nclass NewPlaythrough extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { house: null, byleth: null };\r\n    }\r\n\r\n    selectHouse(house) {\r\n        this.setState({ house });\r\n    }\r\n\r\n    selectByleth(byleth) {\r\n        this.setState({ byleth });\r\n    }\r\n\r\n    startNewPlaythrough = () => {\r\n        const { house, byleth } = this.state;\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"api/user/new_playthrough\",\r\n            params: { house, byleth }\r\n        })\r\n            .then((res) => {\r\n                if (res.data === \"success\") {\r\n                    this.props.getPlaythrough();\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    houseButtonUI(house) {\r\n        const imgSrc = `/img/banners/${house.replace(/\\s+/g, \"_\")}_Banner.png`;\r\n        let imgClass = \"banner-choice new-playthrough-choice\";\r\n        if (this.state.house === house) {\r\n            imgClass += \" new-playthrough-choice-selected\";\r\n        }\r\n\r\n        return (\r\n            <Grid item xs={4} onClick={() => this.selectHouse(house)}>\r\n                <img\r\n                    src={imgSrc}\r\n                    className={imgClass}\r\n                    alt={house}\r\n                    title={house}\r\n                />\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    bylethButtonUI(byleth) {\r\n        const imgSrc = `/img/students/Byleth_${byleth}.png`;\r\n        let imgClass = \"byleth-choice new-playthrough-choice\";\r\n        if (this.state.byleth === byleth) {\r\n            imgClass += \" new-playthrough-choice-selected\";\r\n        }\r\n\r\n        return (\r\n            <Grid item xs={4} onClick={() => this.selectByleth(byleth)}>\r\n                <img\r\n                    src={imgSrc}\r\n                    className={imgClass}\r\n                    alt={`Byleth-${byleth}`}\r\n                    title={`Byleth-${byleth}`}\r\n                />\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    submitButtonUI() {\r\n        if (this.state.house && this.state.byleth) {\r\n            return (\r\n                <Button\r\n                    className={`button ${this.state.house.replace(/\\s+/g, \"\")}`}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.startNewPlaythrough}\r\n                >\r\n                    Start!\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button\r\n                    className=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled\r\n                >\r\n                    Start\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <KeyboardBackspaceIcon\r\n                    onClick={() => {\r\n                        this.props.history.push(\"/\");\r\n                    }}\r\n                />\r\n                <div className=\"padding center\">\r\n                    <h1>New Playthrough</h1>\r\n                    <h2>Select House</h2>\r\n                    <Grid container spacing={2}>\r\n                        {this.houseButtonUI(\"Black Eagles\")}\r\n                        {this.houseButtonUI(\"Blue Lions\")}\r\n                        {this.houseButtonUI(\"Golden Deer\")}\r\n                    </Grid>\r\n                    <h2>Select Byleth</h2>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {this.bylethButtonUI(\"M\")}\r\n                        {this.bylethButtonUI(\"F\")}\r\n                    </Grid>\r\n                    {this.submitButtonUI()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(NewPlaythrough);\r\n","import _ from \"lodash\";\r\n\r\nexport function getNextClass(classes) {\r\n    for (let sClass of classes) {\r\n        const { certified } = sClass;\r\n        if (!certified) {\r\n            return sClass;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// TODO: test this more\r\nexport function studentMeetsSkillReq(name, studentSkillLevel, reqLevel) {\r\n    if (!studentSkillLevel) {\r\n        return false;\r\n    }\r\n\r\n    return studentSkillLevel <= reqLevel;\r\n}\r\n\r\nexport function getHighestSkillLevel(studentSkills, name) {\r\n    const matches = _.filter(studentSkills, { name });\r\n\r\n    if (matches.length < 1) {\r\n        return null;\r\n    } else if (matches.length === 1) {\r\n        return matches[0].level;\r\n    } else {\r\n        let highestLevel = \"E\";\r\n        for (let skill of matches) {\r\n            const { level } = skill;\r\n            if (level < highestLevel) {\r\n                highestLevel = level;\r\n            }\r\n        }\r\n        return highestLevel;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n// TODO: don't display skills already acquired\r\n// (make that an option?)\r\nexport function displayClassSkills(skills) {\r\n    let ui = [];\r\n    for (let i in skills) {\r\n        const { name, level } = skills[i];\r\n        ui.push(\r\n            <span key={name}>\r\n                {name} {level}\r\n            </span>\r\n        );\r\n        if (i < skills.length - 1) {\r\n            ui.push(\", \");\r\n        }\r\n    }\r\n    return ui;\r\n}\r\n\r\nexport function displaySkillsWithoutLevel(skills) {\r\n    let ui = [];\r\n    for (let i in skills) {\r\n        const { name } = skills[i];\r\n        ui.push(<span key={name}>{name}</span>);\r\n        if (i < skills.length - 1) {\r\n            ui.push(\", \");\r\n        }\r\n    }\r\n    return ui;\r\n}\r\n","import React from \"react\";\r\n\r\nconst StudentImg = (props) => {\r\n    const { name, byleth_gender, house } = props;\r\n    // TODO: just get gender, can get rid of byleth_gender\r\n\r\n    let imgSrc = `/img/students/${name}.png`;\r\n    if (name === \"Byleth\") {\r\n        imgSrc = `/img/students/Byleth_${byleth_gender}.png`;\r\n    }\r\n\r\n    return (\r\n        <img\r\n            src={imgSrc}\r\n            className={`roster-img ${house.replace(/\\s+/g, \"\")}`}\r\n            alt={name}\r\n            title={name}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StudentImg;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getNextClass } from \"../helpers/helpers\";\r\nimport { displayClassSkills } from \"../helpers/uihelpers\";\r\n\r\nimport StudentImg from \"../components/StudentImg\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\r\n\r\nconst RosterRow = (props) => {\r\n    const { name, classes, skills } = props.student;\r\n    const nextClass = getNextClass(classes);\r\n\r\n    // only show lowest level uncertified class\r\n    const renderClass = (nextClass) => {\r\n        const { name, type } = nextClass;\r\n        return (\r\n            <span>\r\n                {name} ({type})\r\n            </span>\r\n        );\r\n    };\r\n\r\n    // TODO: get student gender and house for image\r\n    return (\r\n        <div key={name} className=\"roster-row\">\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <StudentImg\r\n                        name={name}\r\n                        byleth_gender={\"F\"}\r\n                        house={\"Black Eagles\"}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={7} className=\"roster-row-student\">\r\n                    <p className=\"roster-name\">{name}</p>\r\n                    <p>\r\n                        {classes.length > 0 ? (\r\n                            <span>Next class: {renderClass(nextClass)}</span>\r\n                        ) : (\r\n                            \"No classes set\"\r\n                        )}\r\n                    </p>\r\n                    <p>\r\n                        {nextClass ? (\r\n                            <span>\r\n                                Skills needed:{\" \"}\r\n                                {displayClassSkills(nextClass.classSkills)}\r\n                            </span>\r\n                        ) : null}\r\n                    </p>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Link to={`/student/${name}`}>\r\n                        <ArrowRightAltIcon />\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RosterRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport RosterRow from \"../components/RosterRow\";\r\n\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// TODO: sort roster by your house -> next 2 houses -> faculty -> other\r\nconst Roster = (props) => {\r\n    if (!props.playthrough) {\r\n        return \"loading...\";\r\n    }\r\n\r\n    const { house, byleth_gender, students } = props.playthrough;\r\n    return (\r\n        <div>\r\n            <div className=\"padding\">\r\n                <h1>\r\n                    {house} Roster\r\n                    <span style={{ float: \"right\" }}>\r\n                        <AddCircleOutlineIcon\r\n                            onClick={() => props.history.push(\"/add_student\")}\r\n                        />\r\n                    </span>\r\n                </h1>\r\n            </div>\r\n            <ul>\r\n                {students.map((student) => {\r\n                    return (\r\n                        <RosterRow\r\n                            key={student.name}\r\n                            student={student}\r\n                            byleth_gender={byleth_gender}\r\n                            house={house}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n            <div className=\"center footer\">\r\n                <Button\r\n                    className=\"button\"\r\n                    style={{ width: \"90%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => props.history.push(\"/new_playthrough\")}\r\n                >\r\n                    Start New Playthrough\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Roster);\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n    getNextClass,\r\n    studentMeetsSkillReq,\r\n    getHighestSkillLevel\r\n} from \"../helpers/helpers\";\r\nimport { displayClassSkills } from \"../helpers/uihelpers\";\r\n\r\nimport StudentImg from \"../components/StudentImg\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\n// TODO: remove student from roster\r\nconst Student = (props) => {\r\n    if (!props.playthrough) {\r\n        return \"loading...\";\r\n    }\r\n\r\n    const { name } = props.match.params;\r\n\r\n    const data = _.find(props.playthrough.students, { name });\r\n    const { classes, skills } = data;\r\n\r\n    // TODO: if no next class, indicate whether next class not set, or\r\n    // if character has reached end of class path\r\n    const nextClass = getNextClass(classes);\r\n\r\n    const renderInfo = (type) => {\r\n        let classesToDisplay;\r\n\r\n        switch (type) {\r\n            case \"Current\":\r\n                if (nextClass) {\r\n                    classesToDisplay = [nextClass];\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case \"Completed\":\r\n                classesToDisplay = _.filter(classes, { certified: true });\r\n                break;\r\n            default:\r\n                classesToDisplay = classes.filter((classInfo) => {\r\n                    if (\r\n                        !classInfo.certified &&\r\n                        classInfo.name !== nextClass.name\r\n                    ) {\r\n                        return classInfo;\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2>{type}</h2>\r\n                {classesToDisplay.length > 0 ? (\r\n                    classesToDisplay.map(({ name, classSkills, certified }) => {\r\n                        return (\r\n                            <Paper\r\n                                className=\"goal-row\"\r\n                                elevation={1}\r\n                                key={name}\r\n                            >\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={6}>\r\n                                        <h3>Class Goal</h3>\r\n                                        <p\r\n                                            onClick={() =>\r\n                                                props.selectClass({\r\n                                                    studentName:\r\n                                                        props.match.params.name,\r\n                                                    className: name\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            [{certified ? \"X\" : \" \"}] {name}\r\n                                        </p>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <h3>Skill Goals</h3>\r\n                                        {classSkills.map((skill) => {\r\n                                            const studentSkillLevel = getHighestSkillLevel(\r\n                                                skills,\r\n                                                skill.name\r\n                                            );\r\n                                            return (\r\n                                                <p\r\n                                                    onClick={() =>\r\n                                                        props.selectSkill({\r\n                                                            studentName:\r\n                                                                props.match\r\n                                                                    .params\r\n                                                                    .name,\r\n                                                            skillName:\r\n                                                                skill.name,\r\n                                                            level: skill.level\r\n                                                        })\r\n                                                    }\r\n                                                    key={`${skill.name} ${skill.level}`}\r\n                                                >\r\n                                                    [\r\n                                                    {studentMeetsSkillReq(\r\n                                                        skill.name,\r\n                                                        studentSkillLevel,\r\n                                                        skill.level\r\n                                                    )\r\n                                                        ? \"X\"\r\n                                                        : \" \"}\r\n                                                    ] {skill.name} {skill.level}\r\n                                                </p>\r\n                                            );\r\n                                        })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div>none</div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // TODO: get student gender and house for image\r\n    return (\r\n        <div className=\"padding\">\r\n            <KeyboardBackspaceIcon onClick={() => props.history.push(\"/\")} />\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}>\r\n                    <StudentImg\r\n                        name={name}\r\n                        byleth_gender={\"F\"}\r\n                        house={\"Black Eagles\"}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={9} className=\"roster-row-student\">\r\n                    <p className=\"roster-name\">\r\n                        {name}{\" \"}\r\n                        <EditIcon\r\n                            fontSize=\"small\"\r\n                            onClick={() =>\r\n                                props.history.push(`/select_classes/${name}`)\r\n                            }\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        Next class:{\" \"}\r\n                        {nextClass\r\n                            ? `${nextClass.name} (${nextClass.type}}`\r\n                            : \"none\"}\r\n                    </p>\r\n                    <p>\r\n                        Skills needed:{\" \"}\r\n                        {nextClass\r\n                            ? displayClassSkills(nextClass.classSkills)\r\n                            : \"n/a\"}{\" \"}\r\n                    </p>\r\n                </Grid>\r\n            </Grid>\r\n            {renderInfo(\"Current\")}\r\n            {renderInfo(\"Upcoming\")}\r\n            {renderInfo(\"Completed\")}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Student);\r\n","import React from \"react\";\nimport { displayClassSkills } from \"../helpers/uihelpers\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst ClassSelectorType = (props) => {\n    return (\n        <div>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    {props.type}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ul>\n                        {props.classes.map(\n                            ({\n                                name,\n                                skills,\n                                abilities,\n                                mastery_ability,\n                                mastery_combat_art\n                            }) => {\n                                return (\n                                    <li\n                                        key={name}\n                                        style={{ marginBottom: \"16px\" }}\n                                        onClick={() =>\n                                            props.selectClassGoal({\n                                                studentName: props.student,\n                                                className: name\n                                            })\n                                        }\n                                    >\n                                        {name}\n                                        <br />\n                                        Skills required:{\" \"}\n                                        {displayClassSkills(skills)}\n                                        <br />\n                                        Class abilities: {abilities || \"none\"}\n                                        <br />\n                                        Class mastery:{\" \"}\n                                        {mastery_ability ? (\n                                            <span>\n                                                Ability {mastery_ability}\n                                            </span>\n                                        ) : null}\n                                        {mastery_ability && mastery_combat_art\n                                            ? \", \"\n                                            : null}\n                                        {mastery_combat_art ? (\n                                            <span>\n                                                Combat Art {mastery_combat_art}\n                                            </span>\n                                        ) : null}\n                                    </li>\n                                );\n                            }\n                        )}\n                    </ul>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n};\n\nexport default ClassSelectorType;\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport ClassSelectorType from \"../components/ClassSelectorType\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\n// TODO: fix reloading on selection,\r\n// maybe store changes in state and\r\n// have save button to update db\r\nclass ClassSelector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { classes: {} };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: \"get\",\r\n            url: \"http://localhost:8000/api/app/classes\"\r\n        }).then((res) => {\r\n            this.setState({ classes: res.data });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.props.match.params;\r\n\r\n        const types = [\r\n            \"Beginner\",\r\n            \"Intermediate\",\r\n            \"Advanced\",\r\n            \"Master\",\r\n            \"Unique\"\r\n        ];\r\n\r\n        return (\r\n            <div className=\"padding\">\r\n                <KeyboardBackspaceIcon\r\n                    onClick={() => {\r\n                        this.props.history.push(`/student/${name}`);\r\n                    }}\r\n                />\r\n                <h1>Select Classes for {name}</h1>\r\n                {types.map((type) => {\r\n                    return (\r\n                        <ClassSelectorType\r\n                            type={type}\r\n                            student={name}\r\n                            classes={_.filter(this.state.classes, {\r\n                                type\r\n                            })}\r\n                            selectClassGoal={this.props.selectClassGoal}\r\n                            key={type}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassSelector;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { displaySkillsWithoutLevel } from \"../helpers/uihelpers\";\r\n\r\nconst SkillsOverview = (props) => {\r\n    const { skills } = props;\r\n\r\n    const types = [\"proficient\", \"budding\", \"weakness\"];\r\n\r\n    const getText = (type, matches) => {\r\n        if (type === \"proficient\") {\r\n            if (matches) {\r\n                return \"Proficient in: \";\r\n            } else {\r\n                return \"No proficient skills\";\r\n            }\r\n        } else if (type === \"budding\") {\r\n            if (matches) {\r\n                return \"Budding talent: \";\r\n            }\r\n        } else {\r\n            if (matches) {\r\n                return \"Weaknesses: \";\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {types.map((type) => {\r\n                const matches = _.filter(skills, { [type]: true });\r\n                if (matches.length > 0) {\r\n                    return (\r\n                        <div>\r\n                            {getText(type, true)}\r\n                            {displaySkillsWithoutLevel(matches)}\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkillsOverview;\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport StudentImg from \"../components/StudentImg\";\r\nimport SkillsOverview from \"../components/SkillsOverview\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nclass AddStudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { availableStudents: [], selectedStudents: [] };\r\n    }\r\n\r\n    addStudent(name) {\r\n        const { selectedStudents } = this.state;\r\n        if (!selectedStudents.includes(name)) {\r\n            selectedStudents.push(name);\r\n        } else {\r\n            const index = _.indexOf(selectedStudents, name);\r\n            selectedStudents.splice(index, 1);\r\n        }\r\n        this.setState({ selectedStudents });\r\n    }\r\n\r\n    renderAvailableStudents() {\r\n        const { availableStudents, selectedStudents } = this.state;\r\n\r\n        let studentList = [];\r\n        let lastHouse = null;\r\n\r\n        for (let student of availableStudents) {\r\n            const { name, gender, house, skills } = student;\r\n\r\n            if (!lastHouse || lastHouse !== house) {\r\n                lastHouse = house;\r\n                studentList.push(\r\n                    <h2 className=\"padding\" key={house}>\r\n                        {house}\r\n                    </h2>\r\n                );\r\n            }\r\n\r\n            studentList.push(\r\n                <Grid\r\n                    container\r\n                    className={`roster-row add-student-row${\r\n                        selectedStudents.includes(name)\r\n                            ? ` add-student-selected ${house.replace(\r\n                                  /\\s+/g,\r\n                                  \"\"\r\n                              )}`\r\n                            : null\r\n                    }`}\r\n                    key={name}\r\n                    onClick={() => this.addStudent(name)}\r\n                >\r\n                    <Grid item xs={4}>\r\n                        <StudentImg\r\n                            name={name}\r\n                            byleth_gender={gender || \"F\"}\r\n                            house={house}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <p className=\"roster-name\" style={{ marginTop: 0 }}>\r\n                            {name}\r\n                        </p>\r\n                        <SkillsOverview skills={skills} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n\r\n        return studentList;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.playthrough && this.props.playthrough.students) {\r\n            axios({\r\n                method: \"get\",\r\n                url: \"/api/app/students\"\r\n            }).then((res) => {\r\n                this.setState({\r\n                    availableStudents: res.data.filter((student) => {\r\n                        if (\r\n                            !_.find(this.props.playthrough.students, {\r\n                                name: student.name\r\n                            })\r\n                        ) {\r\n                            return student;\r\n                        }\r\n                    })\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedStudents } = this.state;\r\n        if (!this.props.playthrough || !this.props.playthrough.students) {\r\n            return \"loading...\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <KeyboardBackspaceIcon\r\n                    onClick={() => {\r\n                        this.props.history.push(\"/\");\r\n                    }}\r\n                />\r\n                <h1 className=\"padding\">Add Students</h1>\r\n                <ul>{this.renderAvailableStudents()}</ul>\r\n                <button\r\n                    onClick={() => this.props.addStudents(selectedStudents)}\r\n                    disabled={selectedStudents.length < 1}\r\n                >\r\n                    Add!\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddStudent);\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { API_URL } from \"./constants\";\nimport \"./App.css\";\n\nimport RequireAuth from \"./components/RequireAuth\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/auth/Login\";\nimport Signup from \"./pages/auth/Signup\";\nimport NewPlaythrough from \"./pages/NewPlaythrough\";\nimport Roster from \"./pages/Roster\";\nimport Student from \"./pages/Student\";\nimport ClassSelector from \"./pages/ClassSelector\";\nimport AddStudent from \"./pages/AddStudent\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { authenticated: false, playthrough: null };\n\n        this.authenticateUser = this.authenticateUser.bind(this);\n        this.getPlaythrough = this.getPlaythrough.bind(this);\n        this.selectClassGoal = this.selectClassGoal.bind(this);\n        this.selectClass = this.selectClass.bind(this);\n        this.selectSkill = this.selectSkill.bind(this);\n        this.addStudents = this.addStudents.bind(this);\n    }\n\n    authenticateUser(bool) {\n        this.setState({ authenticated: bool });\n    }\n\n    logOut = () => {\n        axios({\n            method: \"get\",\n            url: \"/api/account/logout\"\n        })\n            .then((res) => {\n                if (res.data.logout === \"success\") {\n                    this.authenticateUser(false);\n                    this.props.history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    async getPlaythrough() {\n        await axios({\n            method: \"get\",\n            url: `${API_URL}/api/user/playthrough`\n        }).then((res) => {\n            this.setState({ playthrough: res.data });\n        });\n    }\n\n    async selectClassGoal({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class_goal\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectClass({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectSkill({ studentName, skillName, level }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_skill\",\n            params: { studentName, skillName, level }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async addStudents(names) {\n        axios({\n            method: \"post\",\n            url: \"/api/user/add_students\",\n            params: { names }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async componentDidMount() {\n        await axios({\n            method: \"get\",\n            url: \"/api/account/authenticated\"\n        })\n            .then((res) => {\n                const { authenticated } = res.data;\n                this.setState({ authenticated });\n\n                if (authenticated) {\n                    this.getPlaythrough();\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        const { authenticated, playthrough } = this.state;\n\n        const AuthNewPlaythrough = RequireAuth(NewPlaythrough);\n        const AuthRoster = RequireAuth(Roster);\n        const AuthStudent = RequireAuth(Student);\n        const AuthClassSelector = RequireAuth(ClassSelector);\n        const AuthAddStudent = RequireAuth(AddStudent);\n\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <header>\n                        {authenticated ? (\n                            <nav className=\"right\">\n                                <Link to=\"/login\" onClick={this.logOut}>\n                                    Log Out\n                                </Link>\n                            </nav>\n                        ) : null}\n                    </header>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => (\n                                <AuthRoster\n                                    authenticated={authenticated}\n                                    authenticateUser={this.authenticateUser}\n                                    playthrough={playthrough}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/login\"\n                            render={() => (\n                                <Login\n                                    playthrough={playthrough}\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/signup\"\n                            render={() => (\n                                <Signup\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/new_playthrough\"\n                            render={() => (\n                                <AuthNewPlaythrough\n                                    authenticated={authenticated}\n                                    getPlaythrough={this.getPlaythrough}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/student/:name\"\n                            render={() => (\n                                <AuthStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClass={this.selectClass}\n                                    selectSkill={this.selectSkill}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/select_classes/:name\"\n                            render={() => (\n                                <AuthClassSelector\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClassGoal={this.selectClassGoal}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/add_student\"\n                            render={() => (\n                                <AuthAddStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    addStudents={this.addStudents}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const API_URL =\r\n    process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:8000\"\r\n        : \"http://fethtracker.arielschnur.com\";\r\n\r\nexport { API_URL };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["constants.js","components/RequireAuth.js","components/Loading.js","pages/auth/Login.js","pages/auth/Signup.js","components/BackButton.js","pages/NewPlaythrough.js","helpers/helpers.js","helpers/uihelpers.js","components/StudentImg.js","components/RosterRow.js","components/RosterFooter.js","pages/Roster.js","pages/Student.js","components/ClassSelectorType.js","pages/ClassSelector.js","components/SkillsOverview.js","pages/AddStudent.js","pages/Gifts.js","pages/DevNotes.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","ComposedComponent","RequireAuth","this","checkAndRedirect","axios","method","url","then","res","data","authenticated","props","history","push","catch","err","console","log","React","Component","withRouter","useStyles","makeStyles","theme","root","marginTop","Loading","classes","Grid","container","justify","item","className","CircularProgress","size","thickness","Login","state","username","password","errorMessage","e","preventDefault","params","login","authenticateUser","setState","response","onSubmit","field","target","value","TextField","type","label","onChange","onInputChange","Button","variant","color","onClick","useDemoAccount","to","Signup","email","passwordMatch","error","validateFields","signup","length","validateEmail","test","String","toLowerCase","BackButton","id","NewPlaythrough","startNewPlaythrough","house","byleth","getPlaythrough","imgSrc","replace","imgClass","xs","selectHouse","src","alt","title","selectByleth","disabled","spacing","houseButtonUI","bylethButtonUI","submitButtonUI","getNextClass","uncertified","filter","sClass","certified","sortClasses","order","sort","a","b","_","indexOf","studentMeetsSkillReq","studentSkillLevel","reqLevel","skillLevels","studentIsReadyForCert","skills","classSkills","skill","studentSkill","find","name","level","stripSpaces","str","displayClassSkills","map","key","displaySkillsWithoutLevel","houseRGB","StudentImg","byleth_gender","RosterRow","student","appStudents","nextClass","nextSkillGoals","classesSorted","getNextSkillGoals","studentInfo","readyForCert","style","renderClass","compact","classSkill","BottomNavigation","BottomNavigationAction","icon","window","confirm","logOut","Roster","isLoadingUserData","playthrough","width","students","float","match","userStudent","appStudent","currentClasses","completedClasses","upcomingClasses","classInfo","renderSection","classesToDisplay","Paper","elevation","FormControlLabel","control","Checkbox","checked","selectClass","studentName","handleClassCheck","studentSkills","matches","highestLevel","getHighestSkillLevel","selectSkill","skillName","handleSkillCheck","fontSize","removeStudent","position","top","ClassSelectorType","appStudentInfo","studentClasses","filters","typeIsSet","classesSetOfType","marginBottom","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","join","ExpansionPanelDetails","abilities","gender","mastery_ability","mastery_combat_art","shouldDisplay","includes","checkFilters","classIsSet","classIsCertified","studentClassInfo","selectClassGoal","ClassSelector","index","splice","appData","proficientSkills","proficient","budding","onFilterChange","userStudentInfo","SkillsOverview","marginRight","renderSkillType","AddStudent","availableStudents","selectedStudents","addStudents","studentList","lastHouse","studentMeetsFilterReq","addStudent","recruitable","renderAvailableStudents","align","Gifts","userStudents","gifts","alignItems","todos","desc","bugs","featureIdeas","DevNotes","App","logout","isLoadingAppData","bind","bool","names","getAppData","AuthNewPlaythrough","AuthRoster","AuthStudent","Student","AuthClassSelector","AuthAddStudent","AuthGifts","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ce14627.chunk.js","sourcesContent":["const API_URL =\n    process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:8000\"\n        : \"http://fethtracker.arielschnur.com\";\n\nexport { API_URL };\n","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nexport default function (ComposedComponent) {\n    class RequireAuth extends React.Component {\n        componentDidMount() {\n            this.checkAndRedirect();\n        }\n\n        componentDidUpdate() {\n            this.checkAndRedirect();\n        }\n\n        async checkAndRedirect() {\n            await axios({\n                method: \"get\",\n                url: \"/api/account/authenticated\"\n            })\n                .then((res) => {\n                    if (!res.data.authenticated) {\n                        this.props.history.push(\"/login\");\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n\n        render() {\n            return (\n                <div>\n                    {this.props.authenticated ? (\n                        <ComposedComponent {...this.props} />\n                    ) : null}\n                </div>\n            );\n        }\n    }\n\n    return withRouter(RequireAuth);\n}\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"100px\"\n    }\n}));\n\nconst Loading = () => {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <div className={classes.root}>\n                    <CircularProgress size={60} thickness={4} />\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errorMessage: null\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const { username, password } = this.state;\n        axios({\n            method: \"post\",\n            url: \"/api/account/login\",\n            params: { username, password }\n        })\n            .then((res) => {\n                if (res.data.login === \"success\") {\n                    this.props.authenticateUser(true);\n                    // TODO: reroute to roster and then prompt to start\n                    // new playthrough if none\n                    this.props.history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                this.setState({ errorMessage: err.response.data });\n            });\n    }\n\n    useDemoAccount(e) {\n        this.setState({ username: \"testuser\", password: \"userpass12\" });\n        this.onSubmit(e);\n    }\n\n    onInputChange(e, field) {\n        this.setState({ errorMessage: null });\n        this.setState({ [field]: e.target.value });\n    }\n\n    render() {\n        const { username, password, errorMessage } = this.state;\n        return (\n            <div className=\"center\">\n                <h2>Log In</h2>\n                <Grid container justify=\"center\">\n                    <form onSubmit={(e) => this.onSubmit(e)}>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"username\"\n                                value={username}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"username\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                value={password}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"password\")\n                                }\n                            />\n                        </Grid>\n                        <div className=\"form-error\">{errorMessage}</div>\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.onSubmit(e)}\n                        >\n                            Log In\n                        </Button>\n                        <br />\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.useDemoAccount(e)}\n                        >\n                            Demo Account\n                        </Button>\n                        <div>\n                            Don't have an account yet?{\" \"}\n                            <Link to=\"/signup\">Sign Up</Link>\n                        </div>\n                    </form>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            passwordMatch: \"\",\n            errorMessage: null\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const error = this.validateFields();\n\n        if (error) {\n            this.setState({ errorMessage: error });\n        } else {\n            const { username, password, passwordMatch, email } = this.state;\n            axios({\n                method: \"post\",\n                url: \"/api/account/signup\",\n                params: { username, password, passwordMatch, email }\n            })\n                .then((res) => {\n                    if (res.data.signup === \"success\") {\n                        // TODO: fix rerouting to login before authenticated\n                        this.props.authenticateUser(true);\n                        this.props.history.push(\"/\");\n                    }\n                })\n                .catch((err) => {\n                    this.setState({ errorMessage: err.response.data });\n                });\n        }\n    }\n\n    onInputChange(e, field) {\n        this.setState({ errorMessage: null });\n        this.setState({ [field]: e.target.value });\n    }\n\n    validateFields() {\n        const { username, password, passwordMatch, email } = this.state;\n\n        if (!username) {\n            return \"Please enter a username\";\n        }\n        if (!email) {\n            return \"Please enter an email\";\n        }\n        if (!password) {\n            return \"Please enter a password\";\n        }\n        if (!passwordMatch) {\n            return \"Please enter a matching password\";\n        }\n\n        if (username.length < 8) {\n            return \"Please enter a longer username\";\n        }\n        if (password.length < 10) {\n            return \"Please enter a password of at least 10 characters\";\n        }\n        if (passwordMatch !== password) {\n            return \"Please enter a matching password\";\n        }\n        if (!validateEmail) {\n            return \"Invalid email\";\n        }\n    }\n\n    render() {\n        const {\n            username,\n            email,\n            password,\n            passwordMatch,\n            errorMessage\n        } = this.state;\n        return (\n            <div className=\"center\">\n                <h2>Sign Up</h2>\n                <Grid container justify=\"center\">\n                    <form onSubmit={(e) => this.onSubmit(e)}>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"username\"\n                                value={username}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"username\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"text\"\n                                label=\"email\"\n                                value={email}\n                                onChange={(e) => this.onInputChange(e, \"email\")}\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                value={password}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"password\")\n                                }\n                            />\n                        </Grid>\n                        <Grid item className=\"auth-input\">\n                            <TextField\n                                type=\"password\"\n                                label=\"passwordMatch\"\n                                value={passwordMatch}\n                                onChange={(e) =>\n                                    this.onInputChange(e, \"passwordMatch\")\n                                }\n                            />\n                        </Grid>\n                        <div className=\"form-error\">{errorMessage}</div>\n                        <Button\n                            className=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => this.onSubmit(e)}\n                        >\n                            Sign Up\n                        </Button>\n                    </form>\n                </Grid>\n                <div>\n                    Already have an account? <Link to=\"/login\">Log In</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction validateEmail(email) {\n    //eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nconst BackButton = (props) => {\r\n    return (\r\n        <div id=\"back-button\">\r\n            <Link to={props.url ? props.url : \"/\"}>\r\n                <KeyboardBackspaceIcon />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BackButton;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport BackButton from \"../components/BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nclass NewPlaythrough extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { house: null, byleth: null };\n    }\n\n    selectHouse(house) {\n        this.setState({ house });\n    }\n\n    selectByleth(byleth) {\n        this.setState({ byleth });\n    }\n\n    startNewPlaythrough = () => {\n        const { house, byleth } = this.state;\n\n        axios({\n            method: \"post\",\n            url: \"api/user/new_playthrough\",\n            params: { house, byleth }\n        })\n            .then((res) => {\n                if (res.data === \"success\") {\n                    this.props.history.push(\"/\");\n                    this.props.getPlaythrough();\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    houseButtonUI(house) {\n        const imgSrc = `/img/banners/${house.replace(/\\s+/g, \"_\")}_Banner.png`;\n        let imgClass = \"banner-choice new-playthrough-choice\";\n        if (this.state.house === house) {\n            imgClass += \" new-playthrough-choice-selected\";\n        }\n\n        return (\n            <Grid item xs={4} onClick={() => this.selectHouse(house)}>\n                <img\n                    src={imgSrc}\n                    className={imgClass}\n                    alt={house}\n                    title={house}\n                />\n            </Grid>\n        );\n    }\n\n    bylethButtonUI(byleth) {\n        const imgSrc = `/img/students/Byleth_${byleth}.png`;\n        let imgClass = \"byleth-choice new-playthrough-choice\";\n        if (this.state.byleth === byleth) {\n            imgClass += \" new-playthrough-choice-selected\";\n        }\n\n        return (\n            <Grid item xs={4} onClick={() => this.selectByleth(byleth)}>\n                <img\n                    src={imgSrc}\n                    className={imgClass}\n                    alt={`Byleth-${byleth}`}\n                    title={`Byleth-${byleth}`}\n                />\n            </Grid>\n        );\n    }\n\n    submitButtonUI() {\n        if (this.state.house && this.state.byleth) {\n            return (\n                <Button\n                    className={`button ${this.state.house.replace(/\\s+/g, \"\")}`}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.startNewPlaythrough}\n                >\n                    Start!\n                </Button>\n            );\n        } else {\n            return (\n                <Button\n                    className=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled\n                >\n                    Start\n                </Button>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <BackButton />\n                <div className=\"padding center\">\n                    <h2>New Playthrough</h2>\n                    <h3>Select House</h3>\n                    <Grid container spacing={2}>\n                        {this.houseButtonUI(\"Black Eagles\")}\n                        {this.houseButtonUI(\"Blue Lions\")}\n                        {this.houseButtonUI(\"Golden Deer\")}\n                    </Grid>\n                    <h3>Select Byleth</h3>\n                    <Grid container justify=\"center\" spacing={2}>\n                        {this.bylethButtonUI(\"M\")}\n                        {this.bylethButtonUI(\"F\")}\n                    </Grid>\n                    {this.submitButtonUI()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NewPlaythrough);\n","import _ from \"lodash\";\n\nexport function getNextClass(classes) {\n    if (!classes || (classes && classes.length < 1)) {\n        return null;\n    }\n\n    const uncertified = classes.filter((sClass) => {\n        if (!sClass.certified) {\n            return sClass;\n        }\n    });\n\n    if (uncertified.length < 1) {\n        return null;\n    }\n\n    const sorted = sortClasses(uncertified);\n    return sorted[0];\n}\n\nexport function getNextSkillGoals({ classes, skills }) {\n    if (classes && classes.length > 0) {\n        const classesSorted = sortClasses(classes);\n        for (let sClass of classesSorted) {\n            const { certified, classSkills } = sClass;\n            if (!certified) {\n                if (!studentIsReadyForCert({ skills, classSkills })) {\n                    return classSkills;\n                }\n            }\n        }\n    } else {\n        return [];\n    }\n}\n\nexport function sortClasses(classes) {\n    const order = [\n        \"Beginner\",\n        \"Intermediate\",\n        \"Advanced\",\n        \"Master\",\n        \"DLC\",\n        \"Unique\"\n    ];\n\n    return classes.sort((a, b) => {\n        return _.indexOf(order, a.type) - _.indexOf(order, b.type);\n    });\n}\n\nexport function studentMeetsSkillReq({ studentSkillLevel, reqLevel }) {\n    const skillLevels = [\"D\", \"D+\", \"C\", \"C+\", \"B\", \"B+\", \"A\", \"A+\", \"S\"];\n\n    if (!studentSkillLevel) {\n        return false;\n    }\n\n    const studentIndex = _.indexOf(skillLevels, studentSkillLevel);\n    const reqIndex = _.indexOf(skillLevels, reqLevel);\n\n    return studentIndex >= reqIndex;\n}\n\n/**\n * Compares student's obtained skills with skills required for class,\n * and returns whether they are ready for certification aka\n * meet skill requirements\n * @param {array of objects} skills: student's skills\n * @param {array of objects} classSkills: skills required for class\n */\nexport function studentIsReadyForCert({ skills, classSkills }) {\n    const skillsMet = classSkills.filter((skill) => {\n        const studentSkill = _.find(skills, {\n            name: skill.name\n        });\n        if (studentSkill) {\n            if (\n                (studentSkill,\n                studentMeetsSkillReq({\n                    studentSkillLevel: studentSkill.level,\n                    reqLevel: skill.level\n                }))\n            ) {\n                return skill;\n            }\n        }\n    });\n    if (skillsMet.length === classSkills.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getHighestSkillLevel(studentSkills, name) {\n    const matches = _.filter(studentSkills, { name });\n\n    if (matches.length < 1) {\n        return null;\n    } else if (matches.length === 1) {\n        return matches[0].level;\n    } else {\n        let highestLevel = \"E\";\n        for (let skill of matches) {\n            const { level } = skill;\n            if (level < highestLevel) {\n                highestLevel = level;\n            }\n        }\n        return highestLevel;\n    }\n}\n\nexport function stripSpaces(str) {\n    return str.replace(/\\s+/g, \"\");\n}\n","import React from \"react\";\nimport { stripSpaces } from \"./helpers\";\n\nexport function displayClassSkills(skills) {\n    return skills.map(({ name, level }) => {\n        return (\n            <span className=\"skill-icon\" key={name}>\n                <img\n                    src={`/img/skills/${stripSpaces(name)}.png`}\n                    alt={name}\n                    title={name}\n                />\n                {level}\n            </span>\n        );\n    });\n}\n\nexport function displaySkillsWithoutLevel(skills) {\n    if (skills.length > 0) {\n        return skills.map(({ name }) => {\n            return (\n                <img\n                    src={`/img/skills/${stripSpaces(name)}.png`}\n                    className=\"skill-icon\"\n                    alt={name}\n                    title={name}\n                />\n            );\n        });\n    }\n}\n\nexport function houseRGB(house) {\n    switch (house) {\n        case \"Black Eagles\":\n            return \"rgb(206, 54, 87)\";\n        case \"Blue Lions\":\n            return \"rgb(77, 95, 169)\";\n        default:\n            return \"rgb(223, 192, 74)\";\n    }\n}\n","import React from \"react\";\n\nconst StudentImg = (props) => {\n    const { name, byleth_gender, house } = props;\n    // TODO: just get gender, can get rid of byleth_gender\n\n    let imgSrc = `/img/students/${name}.png`;\n    if (name === \"Byleth\") {\n        imgSrc = `/img/students/Byleth_${byleth_gender}.png`;\n    }\n\n    return (\n        <img\n            src={imgSrc}\n            className={`roster-img ${house.replace(/\\s+/g, \"\")}`}\n            alt={name}\n            title={name}\n        />\n    );\n};\n\nexport default StudentImg;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getNextClass,\n    studentIsReadyForCert,\n    studentMeetsSkillReq,\n    getNextSkillGoals\n} from \"../helpers/helpers\";\nimport { displayClassSkills, houseRGB } from \"../helpers/uihelpers\";\n\nimport StudentImg from \"../components/StudentImg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst RosterRow = (props) => {\n    const { name, classes, skills } = props.student;\n    const { appStudents, byleth_gender, house } = props;\n    const nextClass = getNextClass(classes);\n    const nextSkillGoals = getNextSkillGoals({ classes, skills });\n\n    // only show lowest level uncertified class\n    const renderClass = (nextClass, readyForCert) => {\n        if (nextClass) {\n            const { name, type } = nextClass;\n            if (readyForCert) {\n                return (\n                    <span>\n                        Ready for cert: {name} ({type})\n                    </span>\n                );\n            } else {\n                return (\n                    <span>\n                        Next class: {name} ({type})\n                    </span>\n                );\n            }\n        } else {\n            return <span className=\"italic\">Completed all set classes</span>;\n        }\n    };\n    const studentInfo = _.find(appStudents, { name });\n\n    let readyForCert = false;\n    if (nextClass) {\n        readyForCert = studentIsReadyForCert({\n            skills,\n            classSkills: nextClass.classSkills\n        });\n    }\n\n    return (\n        <div key={name} className=\"roster-row\">\n            <Link to={`/student/${name}`} className=\"no-link-style\">\n                <Grid container spacing={3}>\n                    <Grid item xs={3}>\n                        <StudentImg\n                            name={name}\n                            byleth_gender={byleth_gender}\n                            house={\n                                name !== \"Byleth\" ? studentInfo.house : house\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={8} className=\"roster-row-student\">\n                        <p className=\"roster-name\">\n                            {name}{\" \"}\n                            {readyForCert ? (\n                                <span>\n                                    <ErrorIcon\n                                        className=\"ready-for-cert\"\n                                        style={{\n                                            color: houseRGB(house)\n                                        }}\n                                    ></ErrorIcon>\n                                </span>\n                            ) : null}\n                        </p>\n                        <p>\n                            {classes.length > 0 ? (\n                                <span>\n                                    {renderClass(nextClass, readyForCert)}\n                                </span>\n                            ) : (\n                                <span className=\"italic\">No classes set</span>\n                            )}\n                        </p>\n                        <p>\n                            {nextSkillGoals && nextSkillGoals.length > 0 ? (\n                                <span>\n                                    Next goals:{\" \"}\n                                    {nextSkillGoals\n                                        ? displayClassSkills(\n                                              _.compact(\n                                                  nextSkillGoals.map(\n                                                      (classSkill) => {\n                                                          const studentSkill = _.find(\n                                                              skills,\n                                                              {\n                                                                  name:\n                                                                      classSkill.name\n                                                              }\n                                                          );\n                                                          if (\n                                                              !studentSkill ||\n                                                              !studentMeetsSkillReq(\n                                                                  {\n                                                                      studentSkillLevel:\n                                                                          studentSkill.level,\n                                                                      reqLevel:\n                                                                          classSkill.level\n                                                                  }\n                                                              )\n                                                          ) {\n                                                              return classSkill;\n                                                          }\n                                                      }\n                                                  )\n                                              )\n                                          )\n                                        : \"none\"}\n                                </span>\n                            ) : null}\n                        </p>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <ArrowRightAltIcon className=\"right-arrow\" />\n                    </Grid>\n                </Grid>\n            </Link>\n        </div>\n    );\n};\n\nexport default RosterRow;\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport NotesIcon from \"@material-ui/icons/Notes\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst RosterFooter = (props) => {\r\n    const promptLogout = () => {\r\n        const logout = window.confirm(\"Do you want to log out?\");\r\n\r\n        if (logout) {\r\n            props.logOut();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation>\r\n            <Link to=\"/new_playthrough\">\r\n                <BottomNavigationAction\r\n                    label=\"Recents\"\r\n                    value=\"recents\"\r\n                    icon={<AddCircleIcon />}\r\n                />\r\n            </Link>\r\n            <Link to=\"/gifts\">\r\n                <BottomNavigationAction\r\n                    label=\"Nearby\"\r\n                    value=\"nearby\"\r\n                    icon={<CardGiftcardIcon />}\r\n                />\r\n            </Link>{\" \"}\r\n            <Link to=\"/dev_notes\">\r\n                <BottomNavigationAction\r\n                    label=\"Folder\"\r\n                    value=\"folder\"\r\n                    icon={<NotesIcon />}\r\n                />\r\n            </Link>\r\n            <Link to=\"/\" onClick={promptLogout}>\r\n                <BottomNavigationAction\r\n                    label=\"Folder\"\r\n                    value=\"folder\"\r\n                    icon={<ExitToAppIcon />}\r\n                />\r\n            </Link>\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default withRouter(RosterFooter);\r\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RosterRow from \"../components/RosterRow\";\nimport RosterFooter from \"../components/RosterFooter\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from \"../components/Loading\";\n\n// TODO: show alert icon if ready for certification\nconst Roster = (props) => {\n    if (props.isLoadingUserData) {\n        return <Loading />;\n    }\n\n    if (!props.playthrough) {\n        return (\n            <div className=\"padding\">\n                <h2>No playthrough found.</h2>\n                <Link to=\"/new_playthrough\">\n                    <Button\n                        className=\"button\"\n                        style={{ width: \"90%\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        Start New Playthrough\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n\n    const { house, byleth_gender, students } = props.playthrough;\n\n    return (\n        <div>\n            <div className=\"padding\">\n                <h2>\n                    {house} Roster\n                    <span style={{ float: \"right\" }}>\n                        <Link to=\"/add_student\">\n                            <AddCircleOutlineIcon />\n                        </Link>\n                    </span>\n                </h2>\n            </div>\n            <ul>\n                {students.map((student) => {\n                    return (\n                        <RosterRow\n                            key={student.name}\n                            student={student}\n                            byleth_gender={byleth_gender}\n                            house={house}\n                            appStudents={props.appStudents}\n                        />\n                    );\n                })}\n            </ul>\n            <RosterFooter logOut={props.logOut} />\n        </div>\n    );\n};\n\nexport default Roster;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getNextClass,\n    studentMeetsSkillReq,\n    studentIsReadyForCert,\n    getHighestSkillLevel\n} from \"../helpers/helpers\";\nimport { displayClassSkills, houseRGB } from \"../helpers/uihelpers\";\n\nimport Loading from \"../components/Loading\";\nimport StudentImg from \"../components/StudentImg\";\nimport BackButton from \"../components/BackButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst Student = (props) => {\n    if (!props.playthrough) {\n        return <Loading />;\n    }\n\n    const { name } = props.match.params;\n\n    const userStudent = _.find(props.playthrough.students, { name });\n    const { classes, skills } = userStudent;\n    const appStudent = _.find(props.appStudents, { name });\n\n    // TODO: hovering styles\n    const nextClass = getNextClass(classes);\n    const currentClasses = _.compact([nextClass]);\n    const completedClasses = _.compact(_.filter(classes, { certified: true }));\n    const upcomingClasses = _.compact(\n        classes.filter((classInfo) => {\n            if (!classInfo.certified && classInfo.name !== nextClass.name) {\n                return classInfo;\n            }\n        })\n    );\n\n    const removeStudent = (name) => {\n        axios({\n            method: \"post\",\n            url: \"/api/user/remove_student\",\n            params: { name }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                props.removeStudent(name);\n                props.history.push(\"/\");\n            }\n        });\n    };\n\n    const handleClassCheck = (e, name) => {\n        props.selectClass({\n            studentName: props.match.params.name,\n            className: name\n        });\n    };\n\n    const handleSkillCheck = (e, skill) => {\n        props.selectSkill({\n            studentName: props.match.params.name,\n            skillName: skill.name,\n            level: skill.level\n        });\n    };\n\n    const renderSection = (type, classesToDisplay) => {\n        if (classesToDisplay.length < 1) {\n            return (\n                <div>\n                    <h3>{type}</h3>\n                    <Paper className=\"goal-row\" elevation={1} key={name}>\n                        None\n                        {type === \"current\" ? (\n                            <span>\n                                {\" \"}\n                                -{\" \"}\n                                <Link to={`/select_classes/${name}`}>\n                                    Set now\n                                </Link>\n                            </span>\n                        ) : null}\n                    </Paper>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <h3>{type}</h3>\n                {classesToDisplay.length > 0 ? (\n                    classesToDisplay.map(({ name, classSkills, certified }) => {\n                        let readyForCert = false;\n                        if (!certified && classSkills.length > 0) {\n                            readyForCert = studentIsReadyForCert({\n                                skills,\n                                classSkills\n                            });\n                        }\n                        return (\n                            <Paper\n                                className=\"goal-row\"\n                                elevation={1}\n                                key={name}\n                            >\n                                <Grid container spacing={2}>\n                                    <Grid item xs={6}>\n                                        <h4>Class</h4>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={certified}\n                                                    onChange={(e) =>\n                                                        handleClassCheck(\n                                                            e,\n                                                            name\n                                                        )\n                                                    }\n                                                    style={{\n                                                        color: houseRGB(\n                                                            props.playthrough\n                                                                .house\n                                                        )\n                                                    }}\n                                                />\n                                            }\n                                            label={name}\n                                        />\n                                        {readyForCert ? (\n                                            <ErrorIcon\n                                                style={{\n                                                    color: houseRGB(\n                                                        props.playthrough.house\n                                                    )\n                                                }}\n                                            ></ErrorIcon>\n                                        ) : null}\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <h4>Skills Required</h4>\n                                        {classSkills.length > 0\n                                            ? classSkills.map((skill) => {\n                                                  const studentSkillLevel = getHighestSkillLevel(\n                                                      skills,\n                                                      skill.name\n                                                  );\n\n                                                  return (\n                                                      <FormControlLabel\n                                                          control={\n                                                              <Checkbox\n                                                                  checked={studentMeetsSkillReq(\n                                                                      {\n                                                                          studentSkillLevel,\n                                                                          reqLevel:\n                                                                              skill.level\n                                                                      }\n                                                                  )}\n                                                                  onChange={(\n                                                                      e\n                                                                  ) =>\n                                                                      handleSkillCheck(\n                                                                          e,\n                                                                          skill\n                                                                      )\n                                                                  }\n                                                                  style={{\n                                                                      color: houseRGB(\n                                                                          props\n                                                                              .playthrough\n                                                                              .house\n                                                                      )\n                                                                  }}\n                                                              />\n                                                          }\n                                                          label={`${skill.name} ${skill.level}`}\n                                                      />\n                                                  );\n                                              })\n                                            : \"None\"}\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        );\n                    })\n                ) : (\n                    <div>none</div>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <div\n            id=\"student-overview\"\n            style={{ width: \"100%\" }}\n            className=\"padding\"\n        >\n            <BackButton />\n            <Grid container spacing={2}>\n                <Grid item xs={3}>\n                    <StudentImg\n                        name={name}\n                        byleth_gender={props.playthrough.byleth_gender}\n                        house={\n                            name !== \"Byleth\"\n                                ? appStudent.house\n                                : props.playthrough.house\n                        }\n                    />\n                </Grid>\n                <Grid item xs={9} className=\"roster-row-student\">\n                    <p className=\"roster-name\">\n                        {name}{\" \"}\n                        <Link to={`/select_classes/${name}`}>\n                            <EditIcon\n                                fontSize=\"small\"\n                                style={{\n                                    color: houseRGB(props.playthrough.house)\n                                }}\n                            />\n                        </Link>\n                    </p>\n                    <p className=\"roster-desc\">\n                        Next class:{\" \"}\n                        {nextClass\n                            ? `${nextClass.name} (${nextClass.type}}`\n                            : \"none\"}\n                    </p>\n                    <p className=\"roster-desc\">\n                        Skills needed:{\" \"}\n                        {nextClass\n                            ? displayClassSkills(nextClass.classSkills)\n                            : \"n/a\"}{\" \"}\n                    </p>\n                </Grid>\n            </Grid>\n            {renderSection(\"current\", currentClasses)}\n            {upcomingClasses.length > 0\n                ? renderSection(\"upcoming\", upcomingClasses)\n                : null}\n            {renderSection(\"completed\", completedClasses)}\n            <div\n                className=\"footer center\"\n                style={{ marginTop: \"20px\" }}\n                onClick={() => removeStudent(name)}\n            >\n                <HighlightOffIcon\n                    style={{ position: \"relative\", top: \"7px\" }}\n                />\n                <span> Remove from Roster</span>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Student);\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { displayClassSkills } from \"../helpers/uihelpers\";\nimport { stripSpaces } from \"../helpers/helpers\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst ClassSelectorType = (props) => {\n    const { appStudentInfo, studentClasses, type, filters } = props;\n\n    let typeIsSet = false;\n    const classesSetOfType = _.compact(\n        props.studentClasses.map((sClass) => {\n            if (sClass.type === type) {\n                return sClass.name;\n            }\n        })\n    );\n    if (classesSetOfType.length > 0) {\n        typeIsSet = true;\n    }\n\n    const checkFilters = (skills) => {\n        if (filters.length < 1) {\n            return true;\n        }\n        for (let skill of skills) {\n            if (filters.includes(skill.name)) {\n                return true;\n            }\n        }\n    };\n\n    return (\n        <div style={{ marginBottom: \"4px\" }}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    className={\n                        typeIsSet ? `${stripSpaces(props.house)}-bg` : null\n                    }\n                >\n                    {props.type}\n                    {typeIsSet ? ` (${classesSetOfType.join(\", \")})` : null}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ul style={{ width: \"100%\" }}>\n                        {props.classes.map(\n                            ({\n                                name,\n                                skills,\n                                abilities,\n                                gender,\n                                student,\n                                mastery_ability,\n                                mastery_combat_art\n                            }) => {\n                                let shouldDisplay = checkFilters(skills);\n                                if (student) {\n                                    if (student !== props.student) {\n                                        shouldDisplay = false;\n                                    }\n                                }\n                                if (gender) {\n                                    if (gender !== appStudentInfo.gender) {\n                                        shouldDisplay = false;\n                                    }\n                                }\n\n                                if (!shouldDisplay) {\n                                    return null;\n                                }\n\n                                let classIsSet = false;\n                                let classIsCertified = false;\n\n                                const studentClassInfo = _.find(\n                                    studentClasses,\n                                    { name }\n                                );\n                                if (studentClassInfo) {\n                                    classIsSet = true;\n                                    if (studentClassInfo.certified) {\n                                        classIsCertified = true;\n                                    }\n                                }\n\n                                let className = \"set-class\";\n                                if (classIsCertified) {\n                                    className += \" certified\";\n                                } else if (classIsSet) {\n                                    className += ` ${stripSpaces(\n                                        props.house\n                                    )}-bg`;\n                                } else {\n                                    className += \" unset\";\n                                }\n\n                                return (\n                                    <li\n                                        key={name}\n                                        className={className}\n                                        onClick={() =>\n                                            props.selectClassGoal({\n                                                studentName: props.student,\n                                                className: name\n                                            })\n                                        }\n                                    >\n                                        <span className=\"class-name\">\n                                            {name}\n                                            {classIsCertified\n                                                ? \" (Certified)\"\n                                                : null}\n                                        </span>\n                                        <br />\n                                        Skills required:{\" \"}\n                                        {displayClassSkills(skills)}\n                                        <br />\n                                        Class abilities: {abilities || \"none\"}\n                                        <br />\n                                        Class mastery:{\" \"}\n                                        {mastery_ability ? (\n                                            <span>\n                                                Ability {mastery_ability}\n                                            </span>\n                                        ) : null}\n                                        {mastery_ability && mastery_combat_art\n                                            ? \", \"\n                                            : null}\n                                        {mastery_combat_art ? (\n                                            <span>\n                                                Combat Art {mastery_combat_art}\n                                            </span>\n                                        ) : null}\n                                    </li>\n                                );\n                            }\n                        )}\n                    </ul>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n};\n\nexport default ClassSelectorType;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { stripSpaces } from \"../helpers/helpers\";\n\nimport Loading from \"../components/Loading\";\nimport ClassSelectorType from \"../components/ClassSelectorType\";\nimport BackButton from \"../components/BackButton\";\n\n// TODO: fix reloading on selection\nclass ClassSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { classes: {}, filters: [] };\n    }\n\n    onFilterChange(name) {\n        let { filters } = this.state;\n        if (filters.includes(name)) {\n            const index = _.indexOf(filters, name);\n            filters.splice(index, 1);\n        } else {\n            filters.push(name);\n        }\n        this.setState({ filters });\n    }\n\n    componentDidMount() {\n        if (this.props.appData) {\n            this.setState({ classes: this.props.appData.classes });\n        }\n    }\n\n    render() {\n        if (!this.props.playthrough) {\n            return <Loading />;\n        }\n\n        const { name } = this.props.match.params;\n        const appStudentInfo = _.find(this.props.appData.students, { name });\n        const proficientSkills = appStudentInfo.skills.filter((skill) => {\n            if (skill.proficient || skill.budding) {\n                return skill;\n            }\n        });\n\n        const types = [\n            \"Beginner\",\n            \"Intermediate\",\n            \"Advanced\",\n            \"Master\",\n            \"Unique\",\n            \"DLC\"\n        ];\n\n        const { students, house } = this.props.playthrough;\n\n        return (\n            <div className=\"padding\">\n                <BackButton url={`/student/${name}`} />\n                <h2>Select Classes for {name}</h2>\n                <div className=\"skill-filters\">\n                    {proficientSkills.map(({ name }) => {\n                        return (\n                            <img\n                                key={name}\n                                onClick={() => this.onFilterChange(name)}\n                                className={`skill-filter${\n                                    this.state.filters.includes(name)\n                                        ? \" filter-selected\"\n                                        : \"\"\n                                }`}\n                                src={`/img/skills/${stripSpaces(name)}.png`}\n                                alt={name}\n                                title={name}\n                            />\n                        );\n                    })}\n                </div>\n                {types.map((type) => {\n                    const userStudentInfo = _.find(students, { name });\n                    return (\n                        <ClassSelectorType\n                            type={type}\n                            student={name}\n                            classes={_.filter(this.state.classes, {\n                                type\n                            })}\n                            studentClasses={userStudentInfo.classes}\n                            house={house}\n                            selectClassGoal={this.props.selectClassGoal}\n                            key={type}\n                            filters={this.state.filters}\n                            appStudentInfo={appStudentInfo}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ClassSelector;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { displaySkillsWithoutLevel } from \"../helpers/uihelpers\";\n\nconst SkillsOverview = (props) => {\n    const { skills } = props;\n\n    const types = [\"proficient\", \"budding\", \"weakness\"];\n\n    const renderSkillType = (type, matches) => {\n        if (type === \"proficient\") {\n            if (matches.length > 0) {\n                return (\n                    <div>\n                        <span>\n                            <img\n                                src=\"/img/skills/proficient.png\"\n                                className=\"skill-icon\"\n                                style={{ marginRight: \"12px\" }}\n                                alt=\"Proficient\"\n                                title=\"Proficient\"\n                            />\n                            {displaySkillsWithoutLevel(matches)}\n                        </span>\n                    </div>\n                );\n            } else {\n                return \"No proficient skills\";\n            }\n        } else if (type === \"budding\") {\n            if (matches.length > 0) {\n                return (\n                    <div>\n                        <img\n                            src=\"/img/skills/budding.png\"\n                            className=\"skill-icon\"\n                            style={{ marginRight: \"12px\" }}\n                            alt=\"Budding\"\n                            title=\"Budding\"\n                        />\n                        {displaySkillsWithoutLevel(matches)}\n                    </div>\n                );\n            }\n        } else {\n            if (matches.length > 0) {\n                return (\n                    <div>\n                        <img\n                            src=\"/img/skills/weakness.png\"\n                            className=\"skill-icon\"\n                            style={{ marginRight: \"12px\" }}\n                            alt=\"Weakness\"\n                            title=\"Weakness\"\n                        />\n                        {displaySkillsWithoutLevel(matches)}\n                    </div>\n                );\n            }\n        }\n    };\n\n    return (\n        <div>\n            {types.map((type) => {\n                const matches = _.filter(skills, { [type]: true });\n                if (matches.length > 0) {\n                    return <div>{renderSkillType(type, matches)}</div>;\n                }\n            })}\n        </div>\n    );\n};\n\nexport default SkillsOverview;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { stripSpaces } from \"../helpers/helpers\";\n\nimport Loading from \"../components/Loading\";\nimport StudentImg from \"../components/StudentImg\";\nimport BackButton from \"../components/BackButton\";\nimport SkillsOverview from \"../components/SkillsOverview\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst skills = [\n    \"Sword\",\n    \"Lance\",\n    \"Axe\",\n    \"Bow\",\n    \"Brawl\",\n    \"Reason\",\n    \"Faith\",\n    \"Authority\",\n    \"Heavy Armor\",\n    \"Riding\",\n    \"Flying\"\n];\n\nclass AddStudent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            availableStudents: [],\n            selectedStudents: [],\n            filters: []\n        };\n    }\n\n    addStudent(name) {\n        const { selectedStudents } = this.state;\n        if (!selectedStudents.includes(name)) {\n            selectedStudents.push(name);\n        } else {\n            const index = _.indexOf(selectedStudents, name);\n            selectedStudents.splice(index, 1);\n        }\n        this.setState({ selectedStudents });\n    }\n\n    addStudents() {\n        const { selectedStudents } = this.state;\n        if (selectedStudents.length > 0) {\n            this.props.addStudents(selectedStudents);\n        }\n    }\n\n    onFilterChange(name) {\n        let { filters } = this.state;\n        if (filters.includes(name)) {\n            const index = _.indexOf(filters, name);\n            filters.splice(index, 1);\n        } else {\n            filters.push(name);\n        }\n        this.setState({ filters });\n    }\n\n    studentMeetsFilterReq(skills) {\n        const { filters } = this.state;\n\n        for (let skill of skills) {\n            const { name, proficient, budding } = skill;\n            if (filters.includes(name) && (proficient || budding)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    renderAvailableStudents() {\n        const { filters } = this.state;\n        const { availableStudents, selectedStudents } = this.state;\n\n        let studentList = [];\n        let lastHouse = null;\n\n        for (let student of availableStudents) {\n            const { name, gender, house, skills } = student;\n            if (!lastHouse || lastHouse !== house) {\n                lastHouse = house;\n                studentList.push(\n                    <h3 className=\"padding\" key={house}>\n                        {house}\n                    </h3>\n                );\n            }\n\n            if (filters.length < 1 || this.studentMeetsFilterReq(skills)) {\n                studentList.push(\n                    <Grid\n                        container\n                        className={`roster-row add-student-row${\n                            selectedStudents.includes(name)\n                                ? ` add-student-selected ${house.replace(\n                                      /\\s+/g,\n                                      \"\"\n                                  )}`\n                                : null\n                        }`}\n                        key={name}\n                        onClick={() => this.addStudent(name)}\n                    >\n                        <Grid item xs={3}>\n                            <StudentImg\n                                name={name}\n                                byleth_gender={gender || \"F\"}\n                                house={house}\n                            />\n                        </Grid>\n                        <Grid item xs={9}>\n                            <p className=\"roster-name\" style={{ marginTop: 0 }}>\n                                {name}\n                            </p>\n                            <SkillsOverview skills={skills} />\n                        </Grid>\n                    </Grid>\n                );\n            }\n        }\n\n        return studentList;\n    }\n\n    componentDidMount() {\n        if (this.props.playthrough && this.props.playthrough.students) {\n            axios({\n                method: \"get\",\n                url: \"/api/app/students\"\n            }).then((res) => {\n                this.setState({\n                    availableStudents: res.data.filter((student) => {\n                        if (\n                            student.recruitable &&\n                            !_.find(this.props.playthrough.students, {\n                                name: student.name\n                            })\n                        ) {\n                            return student;\n                        }\n                    })\n                });\n            });\n        }\n    }\n\n    render() {\n        const { selectedStudents, filters } = this.state;\n        if (!this.props.playthrough || !this.props.playthrough.students) {\n            return <Loading />;\n        }\n\n        return (\n            <div>\n                <BackButton />\n                <h2 className=\"padding\">Add Students</h2>\n                <div className=\"padding skill-filters\">\n                    {skills.map((name) => {\n                        return (\n                            <img\n                                key={name}\n                                onClick={() => this.onFilterChange(name)}\n                                className={`skill-filter${\n                                    filters.includes(name)\n                                        ? \" filter-selected\"\n                                        : \"\"\n                                }`}\n                                src={`/img/skills/${stripSpaces(name)}.png`}\n                                alt={name}\n                                title={name}\n                            />\n                        );\n                    })}\n                    {filters.length > 0 ? (\n                        <HighlightOffIcon\n                            className=\"hover remove-filters-btn\"\n                            onClick={() => {\n                                this.setState({ filters: [] });\n                            }}\n                        />\n                    ) : null}\n                </div>\n                <ul>{this.renderAvailableStudents()}</ul>\n                <div id=\"sticky-footer\" align=\"right\">\n                    <Link to=\"/\">\n                        <AddCircleIcon\n                            className={`add-student-btn${\n                                this.state.selectedStudents.length < 1\n                                    ? \" deselected\"\n                                    : \"\"\n                            }`}\n                            fontSize=\"large\"\n                            onClick={() => this.addStudents(selectedStudents)}\n                        />\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddStudent;\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport StudentImg from \"../components/StudentImg\";\r\nimport BackButton from \"../components/BackButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Gifts = (props) => {\r\n    const { playthrough, appStudents } = props;\r\n\r\n    if (!playthrough || !appStudents) {\r\n        return <Loading />;\r\n    }\r\n\r\n    const userStudents = playthrough.students;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"padding\">\r\n                <BackButton />\r\n                <h2>Best Gifts</h2>\r\n            </div>\r\n            {userStudents.map(({ name }) => {\r\n                if (name !== \"Byleth\") {\r\n                    const appStudent = _.find(appStudents, { name });\r\n                    const { gifts } = appStudent;\r\n\r\n                    return (\r\n                        <div key={name} className=\"roster-row\">\r\n                            <Grid container spacing={3} alignItems=\"top\">\r\n                                <Grid item xs={3}>\r\n                                    <StudentImg\r\n                                        name={name}\r\n                                        byleth_gender={\r\n                                            props.playthrough.byleth_gender\r\n                                        }\r\n                                        house={\r\n                                            name !== \"Byleth\"\r\n                                                ? appStudent.house\r\n                                                : props.playthrough.house\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <p\r\n                                        className=\"roster-name\"\r\n                                        style={{ marginTop: 0 }}\r\n                                    >\r\n                                        {name}\r\n                                    </p>\r\n                                    <ul className=\"styled-list\">\r\n                                        {gifts.map(({ name }) => {\r\n                                            return <li key={name}>{name}</li>;\r\n                                        })}\r\n                                    </ul>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gifts;\r\n","import React from \"react\";\r\n\r\nimport BackButton from \"../components/BackButton\";\r\n\r\nconst DevNotes = () => {\r\n    return (\r\n        <div className=\"padding\">\r\n            <BackButton />\r\n            <h2>Dev Notes</h2>\r\n            <h3>Todos</h3>\r\n            <ul className=\"styled-list\">\r\n                {todos.map(({ desc }) => {\r\n                    return <li>{desc}</li>;\r\n                })}\r\n            </ul>\r\n            <h3>Known bugs</h3>\r\n            <ul className=\"styled-list\">\r\n                {bugs.map(({ desc }) => {\r\n                    return <li>{desc}</li>;\r\n                })}\r\n            </ul>\r\n            <h3>Feature ideas</h3>\r\n            <ul className=\"styled-list\">\r\n                {featureIdeas.map(({ desc }) => {\r\n                    return <li>{desc}</li>;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst todos = [\r\n    {\r\n        desc:\r\n            \"Add character/class gender and prevent wrong gender from using class e.g. Gremory cannot be male\"\r\n    },\r\n    { desc: \"On class path selection page, show what % other users chose\" },\r\n    {\r\n        desc:\r\n            \"Ability to sort roster page by class level (e.g. show those who haven't certified for Beginner, then Intermediate, then Advanced)\"\r\n    },\r\n    { desc: \"Reorder students by order in game when instructing\" }\r\n];\r\n\r\nconst bugs = [\r\n    {\r\n        desc:\r\n            \"Stuck on loading sometimes when starting new session while unauthenticated\"\r\n    }\r\n];\r\n\r\nconst featureIdeas = [\r\n    { desc: \"Show whether to critique/console for failure\" },\r\n    { desc: \"Select non-class skill goals post master class (or along path)\" },\r\n    { desc: \"Lost item guide\" },\r\n    { desc: \"Track support levels\" },\r\n    { desc: \"Show group task options\" },\r\n    { desc: \"Keep track of class mastery\" },\r\n    { desc: \"Tea Party guides\" }\r\n];\r\n\r\nexport default DevNotes;\r\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { API_URL } from \"./constants\";\nimport \"./App.css\";\n\nimport RequireAuth from \"./components/RequireAuth\";\nimport Loading from \"./components/Loading\";\nimport Login from \"./pages/auth/Login\";\nimport Signup from \"./pages/auth/Signup\";\nimport NewPlaythrough from \"./pages/NewPlaythrough\";\nimport Roster from \"./pages/Roster\";\nimport Student from \"./pages/Student\";\nimport ClassSelector from \"./pages/ClassSelector\";\nimport AddStudent from \"./pages/AddStudent\";\nimport Gifts from \"./pages/Gifts\";\nimport DevNotes from \"./pages/DevNotes\";\nimport { stripSpaces } from \"./helpers/helpers\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoadingAppData: true,\n            isLoadingUserData: true,\n            authenticated: false,\n            playthrough: null,\n            appData: null\n        };\n\n        this.authenticateUser = this.authenticateUser.bind(this);\n        this.getPlaythrough = this.getPlaythrough.bind(this);\n        this.selectClassGoal = this.selectClassGoal.bind(this);\n        this.selectClass = this.selectClass.bind(this);\n        this.selectSkill = this.selectSkill.bind(this);\n        this.addStudents = this.addStudents.bind(this);\n        this.removeStudent = this.removeStudent.bind(this);\n    }\n\n    authenticateUser(bool) {\n        this.setState({ authenticated: bool });\n        this.getPlaythrough();\n    }\n\n    logOut = () => {\n        axios({\n            method: \"get\",\n            url: \"/api/account/logout\"\n        })\n            .then((res) => {\n                if (res.data.logout === \"success\") {\n                    this.authenticateUser(false);\n                    this.props.history.push(\"/\");\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    async getPlaythrough() {\n        axios({\n            method: \"get\",\n            url: `${API_URL}/api/user/playthrough`\n        }).then((res) => {\n            this.setState({ playthrough: res.data, isLoadingUserData: false });\n        });\n    }\n\n    async selectClassGoal({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class_goal\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectClass({ studentName, className }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_class\",\n            params: { studentName, className }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async selectSkill({ studentName, skillName, level }) {\n        await axios({\n            method: \"post\",\n            url: \"/api/user/update_student_skill\",\n            params: { studentName, skillName, level }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    async addStudents(names) {\n        axios({\n            method: \"post\",\n            url: \"/api/user/add_students\",\n            params: { names }\n        }).then((res) => {\n            if (res.data === \"success\") {\n                this.getPlaythrough();\n            }\n        });\n    }\n\n    removeStudent() {\n        this.getPlaythrough();\n    }\n\n    async getAppData() {\n        let students, classes;\n\n        await axios({\n            method: \"get\",\n            url: `${API_URL}/api/app/classes`\n        }).then((res) => {\n            classes = res.data;\n        });\n\n        await axios({\n            method: \"get\",\n            url: `${API_URL}/api/app/students`\n        }).then((res) => {\n            students = res.data;\n        });\n\n        this.setState({\n            appData: { students, classes },\n            isLoadingAppData: false\n        });\n    }\n\n    async componentDidMount() {\n        await axios({\n            method: \"get\",\n            url: \"/api/account/authenticated\"\n        })\n            .then((res) => {\n                const { authenticated } = res.data;\n                this.setState({ authenticated });\n                if (authenticated) {\n                    this.getPlaythrough();\n                } else {\n                    this.setState({ isLoadingUserData: false });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        await this.getAppData();\n    }\n\n    render() {\n        const {\n            isLoadingAppData,\n            isLoadingUserData,\n            authenticated,\n            playthrough,\n            appData\n        } = this.state;\n\n        if (isLoadingAppData || isLoadingUserData) {\n            return <Loading />;\n        }\n\n        const AuthNewPlaythrough = RequireAuth(NewPlaythrough);\n        const AuthRoster = RequireAuth(Roster);\n        const AuthStudent = RequireAuth(Student);\n        const AuthClassSelector = RequireAuth(ClassSelector);\n        const AuthAddStudent = RequireAuth(AddStudent);\n        const AuthGifts = RequireAuth(Gifts);\n\n        return (\n            <div\n                id=\"App\"\n                className={playthrough ? stripSpaces(playthrough.house) : \"\"}\n            >\n                <BrowserRouter>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => (\n                                <AuthRoster\n                                    authenticated={authenticated}\n                                    authenticateUser={this.authenticateUser}\n                                    playthrough={playthrough}\n                                    appStudents={appData.students}\n                                    logOut={this.logOut}\n                                    isLoadingUserData={isLoadingAppData}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/login\"\n                            render={() => (\n                                <Login\n                                    playthrough={playthrough}\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/signup\"\n                            render={() => (\n                                <Signup\n                                    authenticateUser={this.authenticateUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/new_playthrough\"\n                            render={() => (\n                                <AuthNewPlaythrough\n                                    authenticated={authenticated}\n                                    getPlaythrough={this.getPlaythrough}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/student/:name\"\n                            render={() => (\n                                <AuthStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClass={this.selectClass}\n                                    selectSkill={this.selectSkill}\n                                    removeStudent={this.removeStudent}\n                                    appStudents={appData.students}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/select_classes/:name\"\n                            render={() => (\n                                <AuthClassSelector\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    selectClassGoal={this.selectClassGoal}\n                                    appData={appData}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/add_student\"\n                            render={() => (\n                                <AuthAddStudent\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    addStudents={this.addStudents}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/gifts\"\n                            render={() => (\n                                <AuthGifts\n                                    authenticated={authenticated}\n                                    playthrough={playthrough}\n                                    appStudents={appData.students}\n                                />\n                            )}\n                        />\n                        <Route path=\"/dev_notes\" component={DevNotes} />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}